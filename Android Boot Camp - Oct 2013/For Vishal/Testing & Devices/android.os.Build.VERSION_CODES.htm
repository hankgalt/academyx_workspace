<!DOCTYPE html>
<html><head>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width">

<link rel="shortcut icon" type="image/x-icon" href="http://developer.android.com/favicon.ico">
<title>Fragments | Android Developers</title>

<!-- STYLESHEETS -->
<link rel="stylesheet" href="android.os.Build.VERSION_CODES_files/css.css" title="roboto">
<link href="android.os.Build.VERSION_CODES_files/default.css" rel="stylesheet" type="text/css">



<!-- JAVASCRIPT -->
<script async="" src="android.os.Build.VERSION_CODES_files/cbgapi.loaded_1"></script><script async="" src="android.os.Build.VERSION_CODES_files/cbgapi.loaded_0"></script><script gapi_processed="true" src="android.os.Build.VERSION_CODES_files/plusone.js" async="" type="text/javascript"></script><script src="android.os.Build.VERSION_CODES_files/ga.js" async="" type="text/javascript"></script><script src="android.os.Build.VERSION_CODES_files/jsapi" type="text/javascript"></script>
<script src="android.os.Build.VERSION_CODES_files/android_3p-bundle.js" type="text/javascript"></script>
<script type="text/javascript">
  var toRoot = "/";
  var devsite = false;
</script>
<script src="android.os.Build.VERSION_CODES_files/docs.js" type="text/javascript"></script><script src="android.os.Build.VERSION_CODES_files/a" type="text/javascript"></script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-5831155-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
<link rel="stylesheet" href="android.os.Build.VERSION_CODES_files/defaulten.css" type="text/css"><script src="android.os.Build.VERSION_CODES_files/defaulten.js" type="text/javascript"></script></head>
<body class="gc-documentation 
  develop guide" itemscope="" itemtype="http://schema.org/Article">

<a name="top"></a>

    <!-- Header -->
    <div id="header">
        <div class="wrap" id="header-wrap">
          <div class="col-3 logo">
          <a href="http://developer.android.com/index.html">
            <img src="android.os.Build.VERSION_CODES_files/dac_logo.png" alt="Android Developers" height="25" width="123">
          </a>
          <div class="btn-quicknav" id="btn-quicknav">
          	<a href="#" class="arrow-inactive">Quicknav</a>
			      <a href="#" class="arrow-active">Quicknav</a>
          </div>
          </div>
            <ul class="nav-x col-9">
                <li class="design">
                  <a href="http://developer.android.com/design/index.html" zh-tw-lang="設計" zh-cn-lang="设计" ru-lang="Проектирование" ko-lang="디자인" ja-lang="設計" es-lang="Diseñar">Design</a></li>
                <li class="develop"><a class="selected" href="http://developer.android.com/develop/index.html" zh-tw-lang="開發" zh-cn-lang="开发" ru-lang="Разработка" ko-lang="개발" ja-lang="開発" es-lang="Desarrollar">Develop</a></li>
                <li class="distribute last"><a href="http://developer.android.com/distribute/index.html" zh-tw-lang="發佈" zh-cn-lang="分发" ru-lang="Распространение" ko-lang="배포" ja-lang="配布" es-lang="Distribuir">Distribute</a></li>
            </ul>
            
            <!-- New Search -->
            <div class="menu-container">
            <div class="moremenu">
    <div id="more-btn"></div>
  </div>
  <div class="morehover" id="moremenu">
    <div class="top"></div>
    <div class="mid">
      <div class="header">Links</div>
      <ul>
        <li><a href="https://play.google.com/apps/publish/">Google Play Developer Console</a></li>
        <li><a href="http://android-developers.blogspot.com/">Android Developers Blog</a></li>
        <li><a href="http://developer.android.com/about/index.html">About Android</a></li>
      </ul>
      <div class="header">Android Sites</div>
      <ul>
        <li><a href="http://www.android.com/">Android.com</a></li>
        <li class="active"><a>Android Developers</a></li>
        <li><a href="http://source.android.com/">Android Open Source Project</a></li>
      </ul>
      
      
      
        <div class="header">Language</div>
          <div id="language" class="locales">
            <select name="language" onchange="changeLangPref(this.value, true)">
                <option selected="selected" value="en">English</option>
                <option value="es">Español</option>
                <option value="ja">日本語</option>
                <option value="ko">한국어</option>
                <option value="ru">Русский</option>
                <option value="zh-cn">中文 (中国)</option>
                <option value="zh-tw">中文 (台灣)</option>
            </select>
          </div>
        <script type="text/javascript">
          <!--
          loadLangPref();
            //-->
        </script>
      
      


      <br class="clearfix">
    </div>
    <div class="bottom"></div>
  </div>
  <div class="search active" id="search-container">
    <div class="search-inner">
      <div id="search-btn"></div>
      <div class="left"></div>
      <form onsubmit="return submit_search()">
        <input style="color: rgb(0, 0, 0);" id="search_autocomplete" value="android.os.Build.VERSION_CODES" autocomplete="off" name="q" onfocus="search_focus_changed(this, true)" onblur="search_focus_changed(this, false)" onkeydown="return search_changed(event, true, '/')" onkeyup="return search_changed(event, false, '/')" type="text">
      </form>
      <div class="right"></div>
        <a class="close">close</a>
        <div class="left"></div>
        <div class="right"></div>
    </div>
  </div>

  <div class="search_filtered_wrapper reference">
    <div style="display: none;" class="suggest-card reference no-display">
      <ul class="search_filtered">
      <li class="jd-autocomplete"><a href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html" onclick="onSuggestionClick(this)"><b>android.os.Build.VERSION_CODES</b></a></li></ul>
    </div>
  </div>

  <div class="search_filtered_wrapper docs">
    <div style="display: none;" class="suggest-card dummy no-display">&nbsp;</div>
    <div style="display: none;" class="suggest-card develop no-display">
      <ul class="search_filtered">
      </ul>
      <div class="child-card guides no-display">
      </div>
      <div class="child-card training no-display">
      </div>
    </div>
    <div style="display: none;" class="suggest-card design no-display">
      <ul class="search_filtered">
      </ul>
    </div>
    <div style="display: none;" class="suggest-card distribute no-display">
      <ul class="search_filtered">
      </ul>
    </div>
  </div>

  </div>
  <!-- /New Search>
          
          
          <!-- Expanded quicknav -->
           <div id="quicknav" class="col-9">
                <ul>
                    <li class="design">
                      <ul>
                        <li><a href="http://developer.android.com/design/index.html">Get Started</a></li>
                        <li><a href="http://developer.android.com/design/style/index.html">Style</a></li>
                        <li><a href="http://developer.android.com/design/patterns/index.html">Patterns</a></li>
                        <li><a href="http://developer.android.com/design/building-blocks/index.html">Building Blocks</a></li>
                        <li><a href="http://developer.android.com/design/downloads/index.html">Downloads</a></li>
                        <li><a href="http://developer.android.com/design/videos/index.html">Videos</a></li>
                      </ul>
                    </li>
                    <li class="develop">
                      <ul>
                        <li><a class="selected" href="http://developer.android.com/training/index.html" zh-tw-lang="訓練課程" zh-cn-lang="培训" ru-lang="Курсы" ko-lang="교육" ja-lang="トレーニング" es-lang="Capacitación">Training</a></li>
                        <li><a class="selected" href="http://developer.android.com/guide/components/index.html" zh-tw-lang="API 指南" zh-cn-lang="API 指南" ru-lang="Руководства по API" ko-lang="API 가이드" ja-lang="API ガイド" es-lang="Guías de la API">API Guides</a></li>
                        <li><a class="selected" href="http://developer.android.com/reference/packages.html" zh-tw-lang="參考資源" zh-cn-lang="参考" ru-lang="Справочник" ko-lang="참조문서" ja-lang="リファレンス" es-lang="Referencia">Reference</a></li>
                        <li><a class="selected" href="http://developer.android.com/tools/index.html" zh-tw-lang="相關工具" zh-cn-lang="工具" ru-lang="Инструменты" ko-lang="도구" ja-lang="ツール" es-lang="Herramientas">Tools</a>
                          <ul><li><a class="selected" href="http://developer.android.com/sdk/index.html">Get the SDK</a></li></ul>
                        </li>
                        <li><a class="selected" href="http://developer.android.com/google/index.html">Google Services</a>
                        </li>
                        
                      </ul>
                    </li>
                    <li class="distribute last">
                      <ul>
                        <li><a href="http://developer.android.com/distribute/index.html">Google Play</a></li>
                        <li><a href="http://developer.android.com/distribute/googleplay/publish/index.html">Publishing</a></li>
                        <li><a href="http://developer.android.com/distribute/googleplay/promote/index.html">Promoting</a></li>
                        <li><a href="http://developer.android.com/distribute/googleplay/quality/index.html">App Quality</a></li>
                        <li><a href="http://developer.android.com/distribute/googleplay/spotlight/index.html">Spotlight</a></li>
                        <li><a href="http://developer.android.com/distribute/open.html">Open Distribution</a></li>
                      </ul>
                    </li>
                </ul>
          </div>
          <!-- /Expanded quicknav -->
        </div>
    </div>
    <!-- /Header -->
    
    
  <div id="searchResults" class="wrap" style="">
          <h2 style="margin-bottom: 0px;" id="searchTitle">Results for <em>android.os.Build.VERSION_CODES</em></h2><hr>
          <div id="leftSearchControl" class="search-control"><div dir="ltr" class="gsc-control"><div class="gsc-results-wrapper-nooverlay gsc-results-wrapper-visible"><div class="gsc-tabsArea"><div id="0" class="gsc-tabHeader gsc-inline-block gsc-tabhActive">All</div><span class="gs-spacer"> </span><div id="1" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Design</div><span class="gs-spacer"> </span><div id="2" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Training</div><span class="gs-spacer"> </span><div id="3" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Guides</div><span class="gs-spacer"> </span><div id="4" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Reference</div><span class="gs-spacer"> </span><div id="5" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Google Services</div><span class="gs-spacer"> </span><div id="6" class=" gsc-tabHeader gsc-tabhInactive gsc-inline-block" tabindex="0">Blog</div><span class="gs-spacer"> </span></div><div class="gsc-above-wrapper-area"><table class="gsc-above-wrapper-area-container" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-result-info-container"><div id="resInfo-0" class="gsc-result-info">About 158 results (0.22 seconds)</div></td></tr></tbody></table></div><div class="gsc-resultsbox-visible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell gsc-twiddle-opened"><div class="gsc-twiddle"><div class="gsc-title">All</div></div><div class="gsc-stats">(8)</div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div style="display: block;" class="gsc-results gsc-webResult"><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.VERSION_CODES.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAcQFjAA&amp;client=internal-uds-cse&amp;usg=AFQjCNEWgB0eWBhFKx7MPaphcHywSPdFOQ" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html" class="gs-title"><b>Build</b>.<b>VERSION_CODES</b> | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>/<b>os</b>/<b>Build</b>.<b>VERSION_CODES</b>.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.VERSION_CODES.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAcQFjAA&amp;client=internal-uds-cse&amp;usg=AFQjCNEWgB0eWBhFKx7MPaphcHywSPdFOQ" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html" class="gs-title"><b>Build</b>.<b>VERSION_CODES</b> | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">Enumeration of the currently known SDK <b>version codes</b>. These are the values   that can be found in SDK . Version numbers increment monotonically with each&nbsp;<b>...</b></div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>/<b>os</b>/<b>Build</b>.<b>VERSION_CODES</b>.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-expansionArea"><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/Build.VERSION.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.VERSION.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAkQFjAB&amp;client=internal-uds-cse&amp;usg=AFQjCNHdfgPuAnKIe36qK4v_8Fe0AU44rg" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.VERSION.html" class="gs-title"><b>Build</b>.VERSION | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/<b>Build</b>.VERSION.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/Build.VERSION.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.VERSION.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAkQFjAB&amp;client=internal-uds-cse&amp;usg=AFQjCNHdfgPuAnKIe36qK4v_8Fe0AU44rg" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.VERSION.html" class="gs-title"><b>Build</b>.VERSION | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">java.lang.Object. ↳, <b>android</b>.<b>os</b>.<b>Build</b>.VERSION <b>...</b> The current development   codename, or the string "REL" if this is a release <b>build</b>. <b>...</b> <b>Build</b>.  <b>VERSION_CODES</b> .</div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/<b>Build</b>.VERSION.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/Build.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAsQFjAC&amp;client=internal-uds-cse&amp;usg=AFQjCNEALAkBAro9SQoa67ebTJM_avgrCA" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.html" class="gs-title"><b>Build</b> | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/<b>Build</b>.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/Build.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Build.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CAsQFjAC&amp;client=internal-uds-cse&amp;usg=AFQjCNEALAkBAro9SQoa67ebTJM_avgrCA" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Build.html" class="gs-title"><b>Build</b> | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">java.lang.Object. ↳, <b>android</b>.<b>os</b>.<b>Build</b> <b>...</b> Various version strings. class, <b>Build</b>.  <b>VERSION_CODES</b>, Enumeration of the currently known SDK <b>version codes</b>.</div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/<b>Build</b>.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CA0QFjAD&amp;client=internal-uds-cse&amp;usg=AFQjCNG_Pgl1J70CZ3Vmq7G4-bNCURpDLA" dir="ltr" target="_self" href="http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html" class="gs-title"><b>android</b>.<b>os</b>.<b>Build</b>.<b>VERSION_CODES</b></a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>.<b>os</b>.<b>Build</b>.<b>VERSION_CODES</b>.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CA0QFjAD&amp;client=internal-uds-cse&amp;usg=AFQjCNG_Pgl1J70CZ3Vmq7G4-bNCURpDLA" dir="ltr" target="_self" href="http://developer.android.com/sdk/api_diff/10/changes/android.os.Build.VERSION_CODES.html" class="gs-title"><b>android</b>.<b>os</b>.<b>Build</b>.<b>VERSION_CODES</b></a></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">Feb 2, 2011 <b>...</b> Class <b>android</b>.<b>os</b>. <b>Build</b>.<b>VERSION_CODES</b>. Added Fields. int   GINGERBREAD_MR1. Except as noted, this content is licensed under Creative&nbsp;<b>...</b></div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>.<b>os</b>.<b>Build</b>.<b>VERSION_CODES</b>.html</div></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/tools/publishing/versioning.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/tools/publishing/versioning.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBAQFjAE&amp;client=internal-uds-cse&amp;usg=AFQjCNF5qsPQk7q4whYdgvnq9ZRpDbPt2A" dir="ltr" target="_self" href="http://developer.android.com/tools/publishing/versioning.html" class="gs-title">Versioning Your Applications | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/tools/publishing/versioning.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/tools/publishing/versioning.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/tools/publishing/versioning.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBAQFjAE&amp;client=internal-uds-cse&amp;usg=AFQjCNF5qsPQk7q4whYdgvnq9ZRpDbPt2A" dir="ltr" target="_self" href="http://developer.android.com/tools/publishing/versioning.html" class="gs-title">Versioning Your Applications | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet"><b>Building</b> and Running <b>...</b> The <b>Android</b> system does not use app version   information to enforce restrictions <b>...</b> The <b>Android</b> system does, however, enforce   system version compatibility as expressed by the minSdkVersion attribute in the   manifest.</div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/tools/publishing/versioning.html</div></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/package-summary.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/package-summary.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBIQFjAF&amp;client=internal-uds-cse&amp;usg=AFQjCNG0NiDO4DnN4EGffO_CnoTm3EMB4w" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/package-summary.html" class="gs-title"><b>android</b>.<b>os</b> | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/package-summary.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/package-summary.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/package-summary.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBIQFjAF&amp;client=internal-uds-cse&amp;usg=AFQjCNG0NiDO4DnN4EGffO_CnoTm3EMB4w" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/package-summary.html" class="gs-title"><b>android</b>.<b>os</b> | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet"><b>android</b>.<b>os</b>. Provides basic operating system <b>...</b> <b>Build</b>.<b>VERSION_CODES</b>,   Enumeration of the currently known SDK <b>version codes</b>. Bundle, A mapping from   String&nbsp;<b>...</b></div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/package-summary.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/Parcelable.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Parcelable.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBQQFjAG&amp;client=internal-uds-cse&amp;usg=AFQjCNF4fWKz9qaKDNXB20NhMT8x2ag86g" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Parcelable.html" class="gs-title">Parcelable | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/Parcelable.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/Parcelable.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/Parcelable.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBQQFjAG&amp;client=internal-uds-cse&amp;usg=AFQjCNF4fWKz9qaKDNXB20NhMT8x2ag86g" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/Parcelable.html" class="gs-title">Parcelable | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">VERSION · <b>Build</b>.<b>VERSION_CODES</b> · Bundle · CancellationSignal ·   ConditionVariable · CountDownTimer · Debug · Debug. <b>...</b> <b>android</b>.<b>os</b>.Parcelable  &nbsp;<b>...</b></div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/reference/<b>android</b>/<b>os</b>/Parcelable.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div class="gsc-webResult gsc-result"><div class="gs-webResult gs-result"><div class="gsc-thumbnail-inside"><div class="gs-title"><a data-ctorig="http://developer.android.com/reference/android/os/TransactionTooLargeException.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/TransactionTooLargeException.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBYQFjAH&amp;client=internal-uds-cse&amp;usg=AFQjCNF9Eo6nb9mfJGObe6CB0AOTq7Up0w" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/TransactionTooLargeException.html" class="gs-title">TransactionTooLargeException | <b>Android</b> Developers</a></div></div><div class="gsc-url-top"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>/<b>os</b>/TransactionTooLargeException.html</div></div><table class="gsc-table-result"><tbody><tr><td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"></td><td class="gsc-table-cell-snippet-close" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"><div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"><a data-ctorig="http://developer.android.com/reference/android/os/TransactionTooLargeException.html" data-cturl="http://www.google.com/url?q=http://developer.android.com/reference/android/os/TransactionTooLargeException.html&amp;sa=U&amp;ei=nJtpUsChIeHi2QXWroGoAg&amp;ved=0CBYQFjAH&amp;client=internal-uds-cse&amp;usg=AFQjCNF9Eo6nb9mfJGObe6CB0AOTq7Up0w" dir="ltr" target="_self" href="http://developer.android.com/reference/android/os/TransactionTooLargeException.html" class="gs-title">TransactionTooLargeException | <b>Android</b> Developers</a></div><div><span></span></div><div dir="ltr" class="gs-bidi-start-align gs-snippet">java.lang.Throwable. ↳, java.lang.Exception. ↳, <b>android</b>.util.AndroidException. ↳,   <b>android</b>.<b>os</b>.RemoteException. ↳, <b>android</b>.<b>os</b>.TransactionTooLargeException&nbsp;<b>...</b></div><div class="gsc-url-bottom"><div dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short">developer.android.com</div><div style="word-break:break-all;" dir="ltr" class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long">developer.<b>android</b>.com/.../<b>android</b>/<b>os</b>/TransactionTooLargeException.html</div></div><div class="gs-per-result-labels"><span>Labeled</span><a dir="ltr" data-refinementlabel="reference" class="gs-label">Reference</a><span></span></div></td></tr></tbody></table></div><div class="gs-watermark"><a target="_blank" class="gs-watermark" href="http://code.google.com/apis/ajaxsearch/faq.html">clipped from Google - 10/2013</a></div></div><div dir="ltr" class="gsc-cursor-box gs-bidi-start-align"><div class="gsc-cursor"><div tabindex="0" class="gsc-cursor-page gsc-cursor-current-page">1</div><div tabindex="0" class="gsc-cursor-page">2</div><div tabindex="0" class="gsc-cursor-page">3</div><div tabindex="0" class="gsc-cursor-page">4</div><div tabindex="0" class="gsc-cursor-page">5</div><div tabindex="0" class="gsc-cursor-page">6</div><div tabindex="0" class="gsc-cursor-page">7</div><div tabindex="0" class="gsc-cursor-page">8</div><div tabindex="0" class="gsc-cursor-page">9</div><div tabindex="0" class="gsc-cursor-page">10</div></div></div></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Design</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Training</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Guides</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Reference</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Google Services</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div><div class="gsc-resultsRoot gsc-tabData gsc-tabdInactive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Blog</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div></div>
  </div>
    
    
  
    <!-- Secondary x-nav -->
    <div id="nav-x">
        <div class="wrap">
            <ul class="nav-x col-9 develop" style="width:100%">
                <li class="training"><a href="http://developer.android.com/training/index.html" zh-tw-lang="訓練課程" zh-cn-lang="培训" ru-lang="Курсы" ko-lang="교육" ja-lang="トレーニング" es-lang="Capacitación">Training</a></li>
                <li class="guide"><a class="selected" href="http://developer.android.com/guide/components/index.html" zh-tw-lang="API 指南" zh-cn-lang="API 指南" ru-lang="Руководства по API" ko-lang="API 가이드" ja-lang="API ガイド" es-lang="Guías de la API">API Guides</a></li>
                <li class="reference"><a href="http://developer.android.com/reference/packages.html" zh-tw-lang="參考資源" zh-cn-lang="参考" ru-lang="Справочник" ko-lang="참조문서" ja-lang="リファレンス" es-lang="Referencia">Reference</a></li>
                <li class="tools"><a href="http://developer.android.com/tools/index.html" zh-tw-lang="相關工具" zh-cn-lang="工具" ru-lang="Инструменты" ko-lang="도구" ja-lang="ツール" es-lang="Herramientas">Tools</a></li>
                <li class="google"><a href="http://developer.android.com/google/index.html">Google Services</a>
                </li>
                
            </ul>
        </div>
        
    </div>
    <!-- /Sendondary x-nav -->
  




  

  <div class="wrap clearfix" id="body-content">
    <div class="col-4" id="side-nav" itemscope="" itemtype="http://schema.org/SiteNavigationElement"><div style="overflow: hidden; padding: 0px; height: 483px; left: 162px; width: 220px;" id="devdoc-nav" class="scroll-pane jspScrollable">










        

      <div style="width: 220px; height: 483px;" class="jspContainer"><div style="padding: 0px; top: 0px; width: 216px;" class="jspPane"><a style="display: none; width: 216px; left: 162px;" class="totop" href="#top" data-g-event="left-nav-top">to top</a><ul style="width: 216px;" id="nav">
  <!--  Walkthrough for Developers -- quick overview of what it's like to develop on Android -->
  <!--<li style="color:red">Overview</li> -->

  <li class="nav-section expanded">
    <div class="nav-section-header"><a href="http://developer.android.com/guide/components/index.html">
        <span class="en">App Components</span>
      </a></div>
    <ul style="display: block;">
      <li><a href="http://developer.android.com/guide/components/fundamentals.html">
            <span class="en">App Fundamentals</span></a>
      </li>
      <li class="nav-section expanded">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/components/activities.html">
            <span class="en">Activities</span>
          </a></div>
        <ul style="display: block;">
          <li class="selected"><a href="http://developer.android.com/guide/components/fragments.html">
              <span class="en">Fragments</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/components/loaders.html">
              <span class="en">Loaders</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/components/tasks-and-back-stack.html">
              <span class="en">Tasks and Back Stack</span>
            </a></li>
        </ul>
      </li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/components/services.html">
            <span class="en">Services</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/components/bound-services.html">
              <span class="en">Bound Services</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/components/aidl.html">
              <span class="en">AIDL</span>
            </a></li>
        </ul>
      </li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/providers/content-providers.html">
            <span class="en">Content Providers</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/providers/content-provider-basics.html">
              <span class="en">Content Provider Basics</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/providers/content-provider-creating.html">
              <span class="en">Creating a Content Provider</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/providers/calendar-provider.html">
              <span class="en">Calendar Provider</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/providers/contacts-provider.html">
              <span class="en">Contacts Provider</span>
            </a></li>
        </ul>
      </li>
      <li><a href="http://developer.android.com/guide/components/intents-filters.html">
          <span class="en">Intents and Intent Filters</span>
        </a></li>
      <li><a href="http://developer.android.com/guide/components/processes-and-threads.html">
          <span class="en">Processes and Threads</span>
        </a>
      </li>
      <li><a href="http://developer.android.com/guide/topics/security/permissions.html">
          <span class="en">Permissions</span>
        </a>
      </li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/appwidgets/index.html">
            <span class="en">App Widgets</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/appwidgets/host.html">
              <span class="en">App Widget Host</span>
            </a></li>
        </ul>
      </li>
      <li class="nav-section">
      <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/manifest/manifest-intro.html">
          <span class="en">Android Manifest</span>
        </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/manifest/action-element.html">&lt;action&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/activity-element.html">&lt;activity&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/activity-alias-element.html">&lt;activity-alias&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/application-element.html">&lt;application&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/category-element.html">&lt;category&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/compatible-screens-element.html">&lt;compatible-screens&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/data-element.html">&lt;data&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/grant-uri-permission-element.html">&lt;grant-uri-permission&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/instrumentation-element.html">&lt;instrumentation&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/intent-filter-element.html">&lt;intent-filter&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/manifest-element.html">&lt;manifest&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/meta-data-element.html">&lt;meta-data&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/path-permission-element.html">&lt;path-permission&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/permission-element.html">&lt;permission&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/permission-group-element.html">&lt;permission-group&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/permission-tree-element.html">&lt;permission-tree&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/provider-element.html">&lt;provider&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/receiver-element.html">&lt;receiver&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/service-element.html">&lt;service&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/supports-gl-texture-element.html">&lt;supports-gl-texture&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/supports-screens-element.html">&lt;supports-screens&gt;</a></li><!-- ##api level 4## -->
          <li><a href="http://developer.android.com/guide/topics/manifest/uses-configuration-element.html">&lt;uses-configuration&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html">&lt;uses-feature&gt;</a></li> <!-- ##api level 4## -->
          <li><a href="http://developer.android.com/guide/topics/manifest/uses-library-element.html">&lt;uses-library&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/uses-permission-element.html">&lt;uses-permission&gt;</a></li>
          <li><a href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html">&lt;uses-sdk&gt;</a></li>
        </ul>
   </li><!-- end of the manifest file -->

    </ul>
  </li>

  <li class="nav-section">
    <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/ui/index.html">
        <span class="en">User Interface</span>
      </a></div>
    <ul>
      <li><a href="http://developer.android.com/guide/topics/ui/overview.html">
          <span class="en">Overview</span>
        </a></li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/ui/declaring-layout.html">
            <span class="en">Layouts</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/ui/layout/linear.html">
              <span class="en">Linear Layout</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/layout/relative.html">
              <span class="en">Relative Layout</span>
            </a></li>
       <!--
          <li><a href="/guide/topics/ui/layout/grid.html">
              <span class="en">Grid Layout</span>
            </a></li>
       -->
          <li><a href="http://developer.android.com/guide/topics/ui/layout/listview.html">
              <span class="en">List View</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/layout/gridview.html">
              <span class="en">Grid View</span>
            </a></li>
        </ul>
      </li>

      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/ui/controls.html">
            <span class="en">Input Controls</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/button.html">
              <span class="en">Buttons</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/text.html">
              <span class="en">Text Fields</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/checkbox.html">
              <span class="en">Checkboxes</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/radiobutton.html">
              <span class="en">Radio Buttons</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/togglebutton.html">
              <span class="en">Toggle Buttons</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/spinner.html">
              <span class="en">Spinners</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/controls/pickers.html">
              <span class="en">Pickers</span>
            </a></li>
<!--
          <li><a href="/guide/topics/ui/controls/progress.html">
              <span class="en">Seek and Progress Bars</span>
            </a></li>
-->
        </ul>
      </li>
      <li><a href="http://developer.android.com/guide/topics/ui/ui-events.html">
          <span class="en">Input Events</span>
        </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/menus.html">
          <span class="en">Menus</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/actionbar.html">
           <span class="en">Action Bar</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/settings.html">
            <span class="en">Settings</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/dialogs.html">
           <span class="en">Dialogs</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/notifiers/notifications.html">
          <span class="en">Notifications</span>
        </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/notifiers/toasts.html">
          <span class="en">Toasts</span>
        </a></li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/search/index.html">
            <span class="en">Search</span>
          </a></div>
          <ul>
            <li><a href="http://developer.android.com/guide/topics/search/search-dialog.html">Creating a Search Interface</a></li>
            <li><a href="http://developer.android.com/guide/topics/search/adding-recent-query-suggestions.html">Adding Recent Query Suggestions</a></li>
            <li><a href="http://developer.android.com/guide/topics/search/adding-custom-suggestions.html">Adding Custom Suggestions</a></li>
            <li><a href="http://developer.android.com/guide/topics/search/searchable-config.html">Searchable Configuration</a></li>
          </ul>
      </li>
      <li><a href="http://developer.android.com/guide/topics/ui/drag-drop.html">
          <span class="en">Drag and Drop</span>
        </a></li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/ui/accessibility/index.html">
            <span class="en">Accessibility</span>
          </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/ui/accessibility/apps.html">
              <span class="en">Making Applications Accessible</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/accessibility/checklist.html">
              <span class="en">Accessibility Developer Checklist</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/ui/accessibility/services.html">
              <span class="en">Building Accessibility Services</span>
            </a></li>
        </ul>
      </li>
      <li><a href="http://developer.android.com/guide/topics/ui/themes.html">
          <span class="en">Styles and Themes</span>
        </a></li>
      <li><a href="http://developer.android.com/guide/topics/ui/custom-components.html">
          <span class="en">Custom Components</span>
        </a></li>
    </ul>
  </li><!-- end of User Interface -->

    <li class="nav-section">
      <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/resources/index.html">
           <span class="en">App Resources</span>
         </a></div>
      <ul>
        <li><a href="http://developer.android.com/guide/topics/resources/overview.html">
            <span class="en">Overview</span>
          </a></li>
          <li><a href="http://developer.android.com/guide/topics/resources/providing-resources.html">
            <span class="en">Providing Resources</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/resources/accessing-resources.html">
            <span class="en">Accessing Resources</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/resources/runtime-changes.html">
              <span class="en">Handling Runtime Changes</span>
            </a></li>
        <li><a href="http://developer.android.com/guide/topics/resources/localization.html">
            <span class="en">Localization</span>
          </a></li>
        <li class="nav-section">
          <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/resources/available-resources.html">
              <span class="en">Resource Types</span>
            </a></div>
          <ul>
            <li><a href="http://developer.android.com/guide/topics/resources/animation-resource.html">Animation</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/color-list-resource.html">Color State List</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/drawable-resource.html">Drawable</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/layout-resource.html">Layout</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/menu-resource.html">Menu</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/string-resource.html">String</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/style-resource.html">Style</a></li>
            <li><a href="http://developer.android.com/guide/topics/resources/more-resources.html">More Types</a></li>
          </ul>
        </li><!-- end of resource types -->
      </ul>
    </li><!-- end of app resources -->

   <li class="nav-section">
      <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/graphics/index.html">
          <span class="en">Animation and Graphics</span>
        </a></div>
      <ul>
      <li class="nav-section">
        </li><li><a href="http://developer.android.com/guide/topics/graphics/overview.html">
            <span class="en">Overview</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/prop-animation.html">
            <span class="en">Property Animation</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/view-animation.html">
            <span class="en">View Animation</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/drawable-animation.html">
            <span class="en">Drawable Animation</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/2d-graphics.html">
            <span class="en">Canvas and Drawables</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/opengl.html">
            <span class="en">OpenGL ES</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/graphics/hardware-accel.html">
            <span class="en">Hardware Acceleration</span>
          </a></li>
       </ul>
    </li><!-- end of graphics and animation-->

   <li class="nav-section">
            <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/renderscript/index.html">
              <span class="en">Computation</span>
            </a></div>
            <ul>
              <li><a href="http://developer.android.com/guide/topics/renderscript/compute.html">
                    <span class="en">RenderScript</span></a>
                  </li>

              <li><a href="http://developer.android.com/guide/topics/renderscript/advanced.html">
                    <span class="en">Advanced RenderScript</span></a>
                  </li>
              <li><a href="http://developer.android.com/guide/topics/renderscript/reference.html">
                    <span class="en">Runtime API Reference</span></a>
              </li>
             </ul>
   </li>
      <li class="nav-section">
          <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/media/index.html">
            <span class="en">Media and Camera</span>
          </a></div>
          <ul>
            <li><a href="http://developer.android.com/guide/topics/media/mediaplayer.html">
                  <span class="en">Media Playback</span></a>
                </li>
            <li><a href="http://developer.android.com/guide/appendix/media-formats.html">
                   <span class="en">Supported Media Formats</span></a>
                </li>
            <li><a href="http://developer.android.com/guide/topics/media/audio-capture.html">
                  <span class="en">Audio Capture</span></a>
                </li>
            <li><a href="http://developer.android.com/guide/topics/media/jetplayer.html">
                  <span class="en">JetPlayer</span></a>
                </li>
            <li><a href="http://developer.android.com/guide/topics/media/camera.html">
                  <span class="en">Camera</span></a>
                </li>
          </ul>
      </li><!-- end of media and camera -->

      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/sensors/index.html">
              <span class="en">Location and Sensors</span>
              </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/location/index.html">
               <span class="en">Location and Maps</span>
             </a>
          </li><li><a href="http://developer.android.com/guide/topics/location/strategies.html">
               <span class="en">Location Strategies</span>
             </a></li>
          <li><a href="http://developer.android.com/guide/topics/sensors/sensors_overview.html">
              <span class="en">Sensors Overview</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/sensors/sensors_motion.html">
              <span class="en">Motion Sensors</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/sensors/sensors_position.html">
              <span class="en">Position Sensors</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/sensors/sensors_environment.html">
              <span class="en">Environment Sensors</span>
            </a></li>
        </ul>
      </li><!-- end of location and sensors -->



<li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/connectivity/index.html">
               <span class="en">Connectivity</span>
             </a></div>
        <ul>
          <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/connectivity/bluetooth.html">
          <span class="en">Bluetooth</span></a>
        </div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/connectivity/bluetooth-le.html">Bluetooth Low Energy</a></li>
        </ul>
      </li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/connectivity/nfc/index.html">
          <span class="en">NFC</span></a>
        </div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/connectivity/nfc/nfc.html">NFC Basics</a></li>
          <li><a href="http://developer.android.com/guide/topics/connectivity/nfc/advanced-nfc.html">Advanced NFC</a></li>
        </ul>
      </li>
      <li><a href="http://developer.android.com/guide/topics/connectivity/wifip2p.html">
            <span class="en">Wi-Fi P2P</span></a>
          </li>
      <li class="nav-section">
          <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/connectivity/usb/index.html">
            <span class="en">USB</span></a>
          </div>
            <ul>
              <li><a href="http://developer.android.com/guide/topics/connectivity/usb/accessory.html">Accessory</a></li>
              <li><a href="http://developer.android.com/guide/topics/connectivity/usb/host.html">Host</a></li>
            </ul>
     </li>
     <li><a href="http://developer.android.com/guide/topics/connectivity/sip.html">
            <span class="en">SIP</span>
          </a>
     </li>

    </ul>
  </li><!-- end of connectivity -->


      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/text/index.html">
            <span class="en">Text and Input</span>
        </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/topics/text/copy-paste.html">
              <span class="en">Copy and Paste</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/text/creating-input-method.html">
              <span class="en">Creating an IME</span>
            </a></li>
          <li><a href="http://developer.android.com/guide/topics/text/spell-checker-framework.html">
              <span class="en">Spelling Checker</span>
            </a></li>
        </ul>
      </li><!-- end of text and input -->

     <li class="nav-section">
      <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/data/index.html">
          <span class="en">Data Storage</span>
        </a></div>
      <ul>
         <li><a href="http://developer.android.com/guide/topics/data/data-storage.html">
            <span class="en">Storage Options</span>
           </a></li>
        <li><a href="http://developer.android.com/guide/topics/data/backup.html">
            <span class="en">Data Backup</span>
          </a></li>
        <li><a href="http://developer.android.com/guide/topics/data/install-location.html">
            <span class="en">App Install Location</span>
          </a></li>
      </ul>
    </li><!-- end of data storage -->


  <li class="nav-section">
           <div class="nav-section-header"><a href="http://developer.android.com/guide/topics/admin/index.html">
               <span class="en">Administration</span>
             </a></div>
           <ul>
              <li>
                <a href="http://developer.android.com/guide/topics/admin/device-admin.html">
                <span class="en">Device Policies</span></a>
              </li>
            <!--
              <li>
                <a href="/guide/topics/admin/keychain.html">
                <span class="en">Certificate Store</span></a>
              </li>
            -->
           </ul>
  </li><!-- end of administration -->

  <li class="nav-section">
    <div class="nav-section-header"><a href="http://developer.android.com/guide/webapps/index.html">
    <span class="en">Web Apps</span>
    </a></div>
    <ul>
      <li><a href="http://developer.android.com/guide/webapps/overview.html">
            <span class="en">Overview</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/webapps/targeting.html">
            <span class="en">Targeting Screens from Web Apps</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/webapps/webview.html">
            <span class="en">Building Web Apps in WebView</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/webapps/debugging.html">
            <span class="en">Debugging Web Apps</span>
          </a></li>
      <li><a href="http://developer.android.com/guide/webapps/best-practices.html">
            <span class="en">Best Practices for Web Apps</span>
          </a></li>
    </ul>
  </li><!-- end of web apps -->

  <li class="nav-section">
    <div class="nav-section-header"><a href="http://developer.android.com/guide/practices/index.html">
      <span class="en">Best Practices</span>
      <span class="de" style="display:none">Bewährte Verfahren</span>
      <span class="es" style="display:none">Prácticas recomendadas</span>
      <span class="fr" style="display:none">Meilleures pratiques</span>
      <span class="it" style="display:none">Best practice</span>
      <span class="ja" style="display:none">ベスト プラクティス</span>
      <span class="zh-cn" style="display:none">最佳实践</span>
      <span class="zh-tw" style="display:none">最佳實務</span>
    </a></div>
    <ul>
      <li><a href="http://developer.android.com/guide/practices/compatibility.html">
            <span class="en">Compatibility</span>
          </a></li>
      <li class="nav-section">
        <div class="nav-section-header"><a href="http://developer.android.com/guide/practices/screens_support.html">
          <span class="en">Supporting Multiple Screens</span>
        </a></div>
        <ul>
          <li><a href="http://developer.android.com/guide/practices/screens-distribution.html">
            <span class="en">Distributing to Specific Screens</span>
          </a></li>
          <li><a href="http://developer.android.com/guide/practices/screen-compat-mode.html">
            <span class="en">Screen Compatibility Mode</span>
          </a></li>
        </ul>
      </li>
      <li><a href="http://developer.android.com/guide/practices/tablets-and-handsets.html">
            <span class="en">Supporting Tablets and Handsets</span>
          </a></li>

    </ul>
  </li>

      <!-- this needs to move
      <li class="nav-section">
        <div class="nav-section-header"><a href="/guide/practices/ui_guidelines/index.html">
               <span class="en">UI Guidelines</span>
             </a></div>
        <ul>
          <li class="nav-section">
            <div class="nav-section-header"><a href="/guide/practices/ui_guidelines/icon_design.html">
                   <span class="en">Icon Design</span>
                 </a></div>
            <ul>
              <li><a href="/guide/practices/ui_guidelines/icon_design_launcher.html">
                    <span class="en">Launcher Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_menu.html">
                    <span class="en">Menu Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_action_bar.html">
                    <span class="en">Action Bar Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_status_bar.html">
                    <span class="en">Status Bar Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_tab.html">
                    <span class="en">Tab Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_dialog.html">
                    <span class="en">Dialog Icons</span>
                  </a></li>
              <li><a href="/guide/practices/ui_guidelines/icon_design_list.html">
                    <span class="en">List View Icons</span>
                  </a></li>
            </ul>
          </li>
          <li><div><a href="/guide/practices/ui_guidelines/widget_design.html">
                <span class="en">App Widget Design</span>
              </a></div>
          </li>
        </ul>
      </li>
        </ul> -->

<!-- Remove
  <li class="nav-section">
    <div class="nav-section-header"><a href="/guide/appendix/index.html">
        <span class="en">Appendix</span>
        <span class="de" style="display:none">Anhang</span>
        <span class="es" style="display:none">Apéndice</span>
        <span class="fr" style="display:none">Annexes</span>
        <span class="it" style="display:none">Appendice</span>
        <span class="ja" style="display:none">付録</span>
        <span class="zh-cn" style="display:none">附录</span>
        <span class="zh-tw" style="display:none">附錄</span>
      </a></div>
    <ul>
      <li><a href="/guide/appendix/g-app-intents.html">
            <span class="en">Intents List: Google Apps</span>
          </a></li>


      <li><a href="/guide/appendix/glossary.html">
            <span class="en">Glossary</span>
          </a></li>
    </ul>
  </li>

</li>
-->
</ul></div><div class="jspVerticalBar"><div class="jspCap jspCapTop"></div><div style="height: 475px;" class="jspTrack"><div style="height: 274px;" class="jspDrag"><div class="jspDragTop"></div><div class="jspDragBottom"></div></div></div><div class="jspCap jspCapBottom"></div></div></div></div>
      
    </div> <!-- end side-nav -->
    <script>
      $(document).ready(function() {
        scrollIntoView("devdoc-nav");
        });
    </script>




<div class="col-12" id="doc-col">


  
    
      
        <h1 itemprop="name">Fragments</h1>
      
    
  


  
  <div id="jd-content">


    <div class="jd-descr" itemprop="articleBody">
    <div id="qv-wrapper">
<div id="qv">

  <h2>Quickview</h2>
  <ul>
    <li>Fragments decompose application functionality and UI into reusable modules</li>
    <li>Add multiple fragments to a screen to avoid switching activities</li>
    <li>Fragments have their own lifecycle, state, and back stack</li>
    <li>Fragments require API Level 11 or greater</li>
  </ul>

  <h2>In this document</h2>
  <ol>
    <li><a href="#Design">Design Philosophy</a></li>
    <li><a href="#Creating">Creating a Fragment</a>
      <ol>
        <li><a href="#UI">Adding a user interface</a></li>
        <li><a href="#Adding">Adding a fragment to an activity</a></li>
      </ol>
    </li>
    <li><a href="#Managing">Managing Fragments</a></li>
    <li><a href="#Transactions">Performing Fragment Transactions</a></li>
    <li><a href="#CommunicatingWithActivity">Communicating with the Activity</a>
      <ol>
        <li><a href="#EventCallbacks">Creating event callbacks to the activity</a></li>
        <li><a href="#ActionBar">Adding items to the Action Bar</a></li>
      </ol>
    </li>
    <li><a href="#Lifecycle">Handling the Fragment Lifecycle</a>
      <ol>
        <li><a href="#CoordinatingWithActivity">Coordinating with the activity lifecycle</a></li>
      </ol>
    </li>
    <li><a href="#Example">Example</a></li>
  </ol>

  <h2>Key classes</h2>
  <ol>
    <li><code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code></li>
    <li><code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code></li>
    <li><code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code></li>
  </ol>
  
  <h2>See also</h2>
  <ol>
    <li><a href="http://developer.android.com/training/basics/fragments/index.html">Building a Dynamic UI with Fragments</a></li>
    <li><a href="http://developer.android.com/guide/practices/tablets-and-handsets.html">Supporting Tablets
and Handsets</a></li>
  </ol>
</div>
</div>

<p>A <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> represents a behavior or a portion of user interface in an
<code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code>. You can combine multiple fragments in a single activity to build a
multi-pane UI and reuse a fragment in multiple activities. You can think of a fragment as a
modular section of an activity, which has its own lifecycle, receives its own input events, and
which you can add or remove while the activity is running (sort of like a "sub activity" that
you can reuse in different activities).</p>

<p>A fragment must always be embedded in an activity and the fragment's lifecycle is directly
affected by the host activity's lifecycle. For example, when the activity is paused, so are all
fragments in it, and when the activity is destroyed, so are all fragments. However, while an
activity is running (it is in the <em>resumed</em> <a href="http://developer.android.com/guide/components/activities.html#Lifecycle">lifecycle state</a>), you can
manipulate each fragment independently, such as add or remove them. When you perform such a
fragment transaction, you can also add it to a back stack that's managed by the
activity—each back stack entry in the activity is a record of the fragment transaction that
occurred. The back stack allows the user to reverse a fragment transaction (navigate backwards),
by pressing the <em>Back</em> button.</p>

<p>When you add a fragment as a part of your activity layout, it lives in a <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> inside the activity's view hierarchy and the fragment defines its own view
layout.
You can insert a fragment into your activity layout by declaring the fragment in the activity's
layout file, as a <code>&lt;fragment&gt;</code> element, or from your application code by adding it to an
existing <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code>. However, a fragment is not required to be a part of the
activity layout; you may also use a fragment without its own UI as an invisible worker for the
activity.</p>

<p>This document describes how to build your application to use fragments, including
how fragments can maintain their state when added to the activity's back stack, share
events with the activity and other fragments in the activity, contribute to the activity's action
bar, and more.</p>


<h2 style="margin-bottom: 0px;" id="Design">Design Philosophy</h2><hr>

<p>Android introduced fragments in Android 3.0 (API level 11), primarily to support more
dynamic and flexible UI designs on large screens, such as tablets. Because a
tablet's screen is much larger than that of a handset, there's more room to combine and
interchange UI components. Fragments allow such designs without the need for you to manage complex
changes to the view hierarchy. By dividing the layout of an activity into fragments, you become able
to modify the activity's appearance at runtime and preserve those changes in a back stack
that's managed by the activity.</p>

<p>For example, a news application can use one fragment to show a list of articles on the
left and another fragment to display an article on the right—both fragments appear in one
activity, side by side, and each fragment has its own set of lifecycle callback methods and handle
their own user input events. Thus, instead of using one activity to select an article and another
activity to read the article, the user can select an article and read it all within the same
activity, as illustrated in the tablet layout in figure 1.</p>

<p>You should design each fragment as a modular and reusable activity component. That is, because
each fragment defines its own layout and its own behavior with its own lifecycle callbacks, you can
include one fragment in multiple activities, so you should design for reuse and avoid directly
manipulating one fragment from another fragment. This is especially important because a modular
fragment allows you to change your fragment combinations for different screen sizes. When designing
your application to support both tablets and handsets, you can reuse your fragments in different
layout configurations to optimize the user experience based on the available screen space. For
example, on a handset, it might be necessary to separate fragments to provide a single-pane UI when
more than one cannot fit within the same activity.</p>

<img src="android.os.Build.VERSION_CODES_files/fragments.png" alt="">
<p class="img-caption"><strong>Figure 1.</strong> An example of how two UI modules defined by
fragments can be combined into one activity for a tablet design, but separated for a
handset design.</p>

<p>For example—to continue with the news application example—the application can embed
two fragments in <em>Activity A</em>, when running on a tablet-sized device. However, on a
handset-sized screen, there's not enough room for both fragments, so <em>Activity A</em> includes
only the fragment for the list of articles, and when the user selects an article, it starts
<em>Activity B</em>, which includes the second fragment to read the article. Thus, the application
supports both tablets and handsets by reusing fragments in different combinations, as illustrated in
figure 1.</p>

<p>For more information about designing your application with different fragment combinations for
different screen configurations, see the guide to <a href="http://developer.android.com/guide/practices/tablets-and-handsets.html">Supporting Tablets and Handsets</a>.</p>



<h2 style="margin-bottom: 0px;" id="Creating">Creating a Fragment</h2><hr>

<div class="figure" style="width:327px">
<img src="android.os.Build.VERSION_CODES_files/fragment_lifecycle.png" alt="">
<p class="img-caption"><strong>Figure 2.</strong> The lifecycle of a fragment (while its
activity is running).</p>
</div>

<p>To create a fragment, you must create a subclass of <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> (or an existing
subclass of it). The <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> class has code that looks a lot like
an <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code>. It contains callback methods similar to an activity, such
as <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreate%28android.os.Bundle%29">onCreate()</a></code>, <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onStart%28%29">onStart()</a></code>,
<code><a href="http://developer.android.com/reference/android/app/Fragment.html#onPause%28%29">onPause()</a></code>, and <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onStop%28%29">onStop()</a></code>. In
fact, if you're converting an existing Android application to use fragments, you might simply move
code from your activity's callback methods into the respective callback methods of your
fragment.</p>

<p>Usually, you should implement at least the following lifecycle methods:</p>

<dl>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreate%28android.os.Bundle%29">onCreate()</a></code></dt>
  <dd>The system calls this when creating the fragment. Within your implementation, you should
initialize essential components of the fragment that you want to retain when the fragment is
paused or stopped, then resumed.</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code></dt>
  <dd>The system calls this when it's time for the fragment to draw its user interface for the
first time. To draw a UI for your fragment, you must return a <code><a href="http://developer.android.com/reference/android/view/View.html">View</a></code> from this
method that is the root of your fragment's layout. You can return null if the fragment does not
provide a UI.</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Activity.html#onPause%28%29">onPause()</a></code></dt>
  <dd>The system calls this method as the first indication that the user is leaving the
fragment (though it does not always mean the fragment is being destroyed). This is usually where you
should commit any changes that should be persisted beyond the current user session (because
the user might not come back).</dd>
</dl>

<p>Most applications should implement at least these three methods for every fragment, but there are
several other callback methods you should also use to handle various stages of the
fragment lifecycle. All the lifecycle callback methods are discussed in more detail in the section
about <a href="#Lifecycle">Handling the Fragment Lifecycle</a>.</p>


<p>There are also a few subclasses that you might want to extend, instead of the base <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> class:</p>

<dl>
  <dt><code><a href="http://developer.android.com/reference/android/app/DialogFragment.html">DialogFragment</a></code></dt>
  <dd>Displays a floating dialog. Using this class to create a dialog is a good alternative to using
the dialog helper methods in the <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> class, because you can
incorporate a fragment dialog into the back stack of fragments managed by the activity,
allowing the user to return to a dismissed fragment.</dd>

  <dt><code><a href="http://developer.android.com/reference/android/app/ListFragment.html">ListFragment</a></code></dt>
  <dd>Displays a list of items that are managed by an adapter (such as a <code><a href="http://developer.android.com/reference/android/widget/SimpleCursorAdapter.html">SimpleCursorAdapter</a></code>), similar to <code><a href="http://developer.android.com/reference/android/app/ListActivity.html">ListActivity</a></code>. It provides
several methods for managing a list view, such as the <code><a href="http://developer.android.com/reference/android/app/ListFragment.html#onListItemClick%28android.widget.ListView,%20android.view.View,%20int,%20long%29">onListItemClick()</a></code> callback to
handle click events.</dd>

  <dt><code><a href="http://developer.android.com/reference/android/preference/PreferenceFragment.html">PreferenceFragment</a></code></dt>
  <dd>Displays a hierarchy of <code><a href="http://developer.android.com/reference/android/preference/Preference.html">Preference</a></code> objects as a list, similar to
<code><a href="http://developer.android.com/reference/android/preference/PreferenceActivity.html">PreferenceActivity</a></code>. This is useful when creating a "settings"
activity for your application.</dd>
</dl>


<h3 id="UI">Adding a user interface</h3>

<p>A fragment is usually used as part of an activity's user interface and contributes its own
layout to the activity.</p>

<p>To provide a layout for a fragment, you must implement the <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code> callback method, which the Android system calls
when it's time for the fragment to draw its layout. Your implementation of this method must return a
<code><a href="http://developer.android.com/reference/android/view/View.html">View</a></code> that is the root of your fragment's layout.</p>

<p class="note"><strong>Note:</strong> If your fragment is a subclass of <code><a href="http://developer.android.com/reference/android/app/ListFragment.html">ListFragment</a></code>, the default implementation returns a <code><a href="http://developer.android.com/reference/android/widget/ListView.html">ListView</a></code> from
<code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code>, so you don't need to implement it.</p>

<p>To return a layout from <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code>, you can inflate it from a <a href="http://developer.android.com/guide/topics/resources/layout-resource.html">layout resource</a> defined in XML. To
help you do so, <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code> provides a
<code><a href="http://developer.android.com/reference/android/view/LayoutInflater.html">LayoutInflater</a></code> object.</p>

<p>For example, here's a subclass of <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> that loads a layout from the
<code>example_fragment.xml</code> file:</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">ExampleFragment</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Fragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">View</span><span class="pln"> onCreateView</span><span class="pun">(</span><span class="typ">LayoutInflater</span><span class="pln"> inflater</span><span class="pun">,</span><span class="pln"> </span><span class="typ">ViewGroup</span><span class="pln"> container</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="typ">Bundle</span><span class="pln"> savedInstanceState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Inflate the layout for this fragment</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> inflater</span><span class="pun">.</span><span class="pln">inflate</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">layout</span><span class="pun">.</span><span class="pln">example_fragment</span><span class="pun">,</span><span class="pln"> container</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">false</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre>

<div class="sidebox-wrapper">
<div class="sidebox">
  <h3>Creating a layout</h3>
  <p>In the sample above, <code>R.layout.example_fragment</code> is a reference to a layout resource
named <code>example_fragment.xml</code> saved in the application resources. For information about how to
create a layout in XML, see the <a href="http://developer.android.com/guide/topics/ui/index.html">User Interface</a>
documentation.</p>
</div>
</div>

<p>The <code>container</code> parameter passed to <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code> is the parent <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> (from the activity's layout) in which
your fragment layout
will be inserted. The <code>savedInstanceState</code> parameter is a <code><a href="http://developer.android.com/reference/android/os/Bundle.html">Bundle</a></code> that
provides data about the previous instance of the fragment, if the fragment is being resumed
(restoring state is discussed more in the section about <a href="#Lifecycle">Handling the
Fragment Lifecycle</a>).</p>

<p>The <code><a href="http://developer.android.com/reference/android/view/LayoutInflater.html#inflate%28int,%20android.view.ViewGroup,%20boolean%29">inflate()</a></code> method takes
three arguments:</p>
<ul>
  <li>The resource ID of the layout you want to inflate.</li>
  <li>The <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> to be the parent of the inflated layout. Passing the <code>container</code> is important in order for the system to apply layout parameters to the root view of the
inflated layout, specified by the parent view in which it's going.</li>
  <li>A boolean indicating whether the inflated layout should be attached to the <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> (the second parameter) during inflation. (In this case, this
is false because the system is already inserting the inflated layout into the <code>container</code>—passing true would create a redundant view group in the final layout.)</li>
</ul>

<p>Now you've seen how to create a fragment that provides a layout. Next, you need to add
the fragment to your activity.</p>



<h3 id="Adding">Adding a fragment to an activity</h3>

<p>Usually, a fragment contributes a portion of UI to the host activity, which is embedded as a part
of the activity's overall view hierarchy. There are two ways you can add a fragment to the activity
layout:</p>

<ul>
  <li><b>Declare the fragment inside the activity's layout file.</b>
<p>In this case, you can
specify layout properties for the fragment as if it were a view. For example, here's the layout
file for an activity with two fragments:</p>
<pre class="prettyprint"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"utf-8"</span><span class="pun">?&gt;</span><span class="pln"><br></span><span class="tag">&lt;LinearLayout</span><span class="pln"> </span><span class="atn">xmlns:android</span><span class="pun">=</span><span class="atv">"http://schemas.android.com/apk/res/android"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:orientation</span><span class="pun">=</span><span class="atv">"horizontal"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;fragment</span><span class="pln"> </span><span class="atn">android:name</span><span class="pun">=</span><span class="atv">"com.example.news.ArticleListFragment"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:id</span><span class="pun">=</span><span class="atv">"@+id/list"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_weight</span><span class="pun">=</span><span class="atv">"1"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"0dp"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;fragment</span><span class="pln"> </span><span class="atn">android:name</span><span class="pun">=</span><span class="atv">"com.example.news.ArticleReaderFragment"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:id</span><span class="pun">=</span><span class="atv">"@+id/viewer"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_weight</span><span class="pun">=</span><span class="atv">"2"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"0dp"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/LinearLayout&gt;</span></pre>
  <p>The <code>android:name</code> attribute in the <code>&lt;fragment&gt;</code> specifies the <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> class to instantiate in the layout.</p>

<p>When the system creates this activity layout, it instantiates each fragment specified in the
layout and calls the <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code> method for each one,
to retrieve each fragment's layout. The system inserts the <code><a href="http://developer.android.com/reference/android/view/View.html">View</a></code> returned by the
fragment directly in place of the <code>&lt;fragment&gt;</code> element.</p>

<div class="note">
  <p><strong>Note:</strong> Each fragment requires a unique identifier that
the system can use to restore the fragment if the activity is restarted (and which you can use to
capture the fragment to perform transactions, such as remove it). There are three ways to provide an
ID for a fragment:</p>
  <ul>
    <li>Supply the <code>android:id</code> attribute with a unique ID.</li>
    <li>Supply the <code>android:tag</code> attribute with a unique string.</li>
    <li>If you provide neither of the previous two, the system uses the ID of the container 
view.</li>
  </ul>
</div>
  </li>

  <li><b>Or, programmatically add the fragment to an existing <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code>.</b>
<p>At any time while your activity is running, you can add fragments to your activity layout. You
simply need to specify a <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> in which to place the fragment.</p>
  <p>To make fragment transactions in your activity (such as add, remove, or replace a
fragment), you must use APIs from <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code>. You can get an instance
of <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code> from your <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> like this:</p>

<pre class="prettyprint"><span class="typ">FragmentManager</span><span class="pln"> fragmentManager </span><span class="pun">=</span><span class="pln"> </span><code><a href="http://developer.android.com/reference/android/app/Activity.html#getFragmentManager%28%29"><span class="pln">getFragmentManager</span><span class="pun">()</span></a></code><span class="pln"><br></span><span class="typ">FragmentTransaction</span><span class="pln"> fragmentTransaction </span><span class="pun">=</span><span class="pln"> fragmentManager</span><span class="pun">.</span><code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#beginTransaction%28%29"><span class="pln">beginTransaction</span><span class="pun">()</span></a></code><span class="pun">;</span></pre>

<p>You can then add a fragment using the <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#add%28int,%20android.app.Fragment%29">add()</a></code> method, specifying the fragment to add and
the view in which to insert it. For example:</p>

<pre class="prettyprint"><span class="typ">ExampleFragment</span><span class="pln"> fragment </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ExampleFragment</span><span class="pun">();</span><span class="pln"><br>fragmentTransaction</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">fragment_container</span><span class="pun">,</span><span class="pln"> fragment</span><span class="pun">);</span><span class="pln"><br>fragmentTransaction</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span></pre>

  <p>The first argument passed to <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#add%28int,%20android.app.Fragment%29">add()</a></code>
is the <code><a href="http://developer.android.com/reference/android/view/ViewGroup.html">ViewGroup</a></code> in which the fragment should be placed, specified by
resource ID, and the second parameter is the fragment to add.</p>
  <p>Once you've made your changes with
<code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code>, you must
call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code> for the changes to take effect.</p>
  </li>
</ul>


<h4 id="AddingWithoutUI">Adding a fragment without a UI</h4>

<p>The examples above show how to add a fragment to your activity in order to provide a UI. However,
you can also use a fragment to provide a background behavior for the activity without presenting
additional UI.</p>

<p>To add a fragment without a UI, add the fragment from the activity using <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#add%28android.app.Fragment,%20java.lang.String%29">add(Fragment, String)</a></code> (supplying a unique string "tag" for the
fragment, rather than a view ID). This adds the fragment, but, because it's not associated with a
view in the activity layout, it does not receive a call to <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code>. So you don't need to implement that method.</p>

<p>Supplying a string tag for the fragment isn't strictly for non-UI fragments—you can also
supply string tags to fragments that do have a UI—but if the fragment does not have a
UI, then the string tag is the only way to identify it. If you want to get the fragment from the
activity later, you need to use <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentByTag%28java.lang.String%29">findFragmentByTag()</a></code>.</p>

<p>For an example activity that uses a fragment as a background worker, without a UI, see the <a href="http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/app/FragmentRetainInstance.html"><code>FragmentRetainInstance.java</code></a> sample.</p>



<h2 style="margin-bottom: 0px;" id="Managing">Managing Fragments</h2><hr>

<p>To manage the fragments in your activity, you need to use <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code>. To
get it, call <code><a href="http://developer.android.com/reference/android/app/Activity.html#getFragmentManager%28%29">getFragmentManager()</a></code> from your activity.</p>

<p>Some things that you can do with <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code> include:</p>

<ul>
  <li>Get fragments that exist in the activity, with <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentById%28int%29">findFragmentById()</a></code> (for fragments that provide a UI in
the activity layout) or <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentByTag%28java.lang.String%29">findFragmentByTag()</a></code> (for fragments that do or don't provide a UI).</li> 
  <li>Pop fragments off the back stack, with <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#popBackStack%28%29">popBackStack()</a></code> (simulating a <em>Back</em> command by the user).</li>
  <li>Register a listener for changes to the back stack, with <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#addOnBackStackChangedListener%28android.app.FragmentManager.OnBackStackChangedListener%29">addOnBackStackChangedListener()</a></code>.</li>
</ul>

<p>For more information about these methods and others, refer to the <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code> class documentation.</p>

<p>As demonstrated in the previous section, you can also use <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code>
to open a <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code>, which allows you to perform transactions, such as
add and remove fragments.</p>


<h2 style="margin-bottom: 0px;" id="Transactions">Performing Fragment Transactions</h2><hr>

<p>A great feature about using fragments in your activity is the ability to add, remove, replace,
and perform other actions with them, in response to user interaction. Each set of changes that you
commit to the activity is called a transaction and you can perform one using APIs in <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code>. You can also save each transaction to a back stack managed by the
activity, allowing the user to navigate backward through the fragment changes (similar to navigating
backward through activities).</p>

<p>You can acquire an instance of <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code> from the <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code> like this:</p>

<pre class="prettyprint"><span class="typ">FragmentManager</span><span class="pln"> fragmentManager </span><span class="pun">=</span><span class="pln"> </span><code><a href="http://developer.android.com/reference/android/app/Activity.html#getFragmentManager%28%29"><span class="pln">getFragmentManager</span><span class="pun">()</span></a></code><span class="pun">;</span><span class="pln"><br></span><span class="typ">FragmentTransaction</span><span class="pln"> fragmentTransaction </span><span class="pun">=</span><span class="pln"> fragmentManager</span><span class="pun">.</span><code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#beginTransaction%28%29"><span class="pln">beginTransaction</span><span class="pun">()</span></a></code><span class="pun">;</span></pre>

<p>Each transaction is a set of changes that you want to perform at the same time. You can set
up all the changes you want to perform for a given transaction using methods such as <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#add%28android.app.Fragment,%20java.lang.String%29">add()</a></code>, <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#remove%28android.app.Fragment%29">remove()</a></code>,
and <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#replace%28int,%20android.app.Fragment%29">replace()</a></code>. Then, to apply the transaction
to the activity, you must call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code>.</p>


<p>Before you call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code>, however, you might want to call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code>, in order to add the transaction
to a back stack of fragment transactions. This back stack is managed by the activity and allows
the user to return to the previous fragment state, by pressing the <em>Back</em> button.</p>

<p>For example, here's how you can replace one fragment with another, and preserve the previous
state in the back stack:</p>

<pre class="prettyprint"><span class="com">// Create new fragment and transaction</span><span class="pln"><br></span><span class="typ">Fragment</span><span class="pln"> newFragment </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ExampleFragment</span><span class="pun">();</span><span class="pln"><br></span><span class="typ">FragmentTransaction</span><span class="pln"> transaction </span><span class="pun">=</span><span class="pln"> getFragmentManager</span><span class="pun">().</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln"><br><br></span><span class="com">// Replace whatever is in the fragment_container view with this fragment,</span><span class="pln"><br></span><span class="com">// and add the transaction to the back stack</span><span class="pln"><br>transaction</span><span class="pun">.</span><span class="pln">replace</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">fragment_container</span><span class="pun">,</span><span class="pln"> newFragment</span><span class="pun">);</span><span class="pln"><br>transaction</span><span class="pun">.</span><span class="pln">addToBackStack</span><span class="pun">(</span><span class="kwd">null</span><span class="pun">);</span><span class="pln"><br><br></span><span class="com">// Commit the transaction</span><span class="pln"><br>transaction</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span></pre>

<p>In this example, <code>newFragment</code> replaces whatever fragment (if any) is currently in the
layout container identified by the <code>R.id.fragment_container</code> ID. By calling <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code>, the replace transaction is
saved to the back stack so the user can reverse the transaction and bring back the
previous fragment by pressing the <em>Back</em> button.</p>

<p>If you add multiple changes to the transaction (such as another <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#add%28android.app.Fragment,%20java.lang.String%29">add()</a></code> or <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#remove%28android.app.Fragment%29">remove()</a></code>) and call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code>, then all changes applied
before you call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code> are added to the
back stack as a single transaction and the <em>Back</em> button will reverse them all together.</p>

<p>The order in which you add changes to a <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html">FragmentTransaction</a></code> doesn't matter,
except:</p>
<ul>
  <li>You must call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code> last</li>
  <li>If you're adding multiple fragments to the same container, then the order in which
you add them determines the order they appear in the view hierarchy</li>
</ul>

<p>If you do not call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code> when you perform a transaction that removes a fragment, then that fragment is
destroyed when the transaction is committed and the user cannot navigate back to it. Whereas, if you
do call <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code> when
removing a fragment, then the fragment is <em>stopped</em> and will be resumed if the user navigates
back.</p>

<p class="note"><strong>Tip:</strong> For each fragment transaction, you can apply a transition
animation, by calling <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#setTransition%28int%29">setTransition()</a></code> before
you commit.</p>

<p>Calling <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code> does not perform the transaction
immediately. Rather, it schedules it to run on the activity's UI thread (the "main" thread) as soon
as the thread is able to do so. If necessary, however, you may call <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#executePendingTransactions%28%29">executePendingTransactions()</a></code> from your UI thread to immediately execute
transactions submitted by <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code>. Doing so is
usually not necessary unless the transaction is a dependency for jobs in other threads.</p>

<p class="caution"><strong>Caution:</strong> You can commit a transaction using <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commit%28%29">commit()</a></code> only prior to the activity <a href="http://developer.android.com/guide/components/activities.html#SavingActivityState">saving its
state</a> (when the user leaves the activity). If you attempt to commit after that point, an
exception will be thrown. This is because the state after the commit can be lost if the activity
needs to be restored. For situations in which its okay that you lose the commit, use <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#commitAllowingStateLoss%28%29">commitAllowingStateLoss()</a></code>.</p>




<h2 style="margin-bottom: 0px;" id="CommunicatingWithActivity">Communicating with the Activity</h2><hr>

<p>Although a <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> is implemented as an object that's independent from an
<code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> and can be used inside multiple activities, a given instance of
a fragment is directly tied to the activity that contains it.</p>

<p>Specifically, the fragment can access the <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> instance with <code><a href="http://developer.android.com/reference/android/app/Fragment.html#getActivity%28%29">getActivity()</a></code> and easily perform tasks such as find a view in the
activity layout:</p>

<pre class="prettyprint"><span class="typ">View</span><span class="pln"> listView </span><span class="pun">=</span><span class="pln"> </span><code><a href="http://developer.android.com/reference/android/app/Fragment.html#getActivity%28%29"><span class="pln">getActivity</span><span class="pun">()</span></a></code><span class="pun">.</span><code><a href="http://developer.android.com/reference/android/app/Activity.html#findViewById%28int%29"><span class="pln">findViewById</span></a></code><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">list</span><span class="pun">);</span></pre>

<p>Likewise, your activity can call methods in the fragment by acquiring a reference to the
<code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code> from <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html">FragmentManager</a></code>, using <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentById%28int%29">findFragmentById()</a></code> or <code><a href="http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentByTag%28java.lang.String%29">findFragmentByTag()</a></code>. For example:</p>

<pre class="prettyprint"><span class="typ">ExampleFragment</span><span class="pln"> fragment </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ExampleFragment</span><span class="pun">)</span><span class="pln"> getFragmentManager</span><span class="pun">().</span><span class="pln">findFragmentById</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">example_fragment</span><span class="pun">);</span></pre>


<h3 id="EventCallbacks">Creating event callbacks to the activity</h3>

<p>In some cases, you might need a fragment to share events with the activity. A good way to do that
is to define a callback interface inside the fragment and require that the host activity implement
it. When the activity receives a callback through the interface, it can share the information with
other fragments in the layout as necessary.</p>

<p>For example, if a news application has two fragments in an activity—one to show a list of
articles (fragment A) and another to display an article (fragment B)—then fragment A must tell
the activity when a list item is selected so that it can tell fragment B to display the article. In
this case, the <code>OnArticleSelectedListener</code> interface is declared inside fragment A:</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FragmentA</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ListFragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">// Container Activity must implement this interface</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">interface</span><span class="pln"> </span><span class="typ">OnArticleSelectedListener</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onArticleSelected</span><span class="pun">(</span><span class="typ">Uri</span><span class="pln"> articleUri</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>Then the activity that hosts the fragment implements the <code>OnArticleSelectedListener</code>
interface and
overrides <code>onArticleSelected()</code> to notify fragment B of the event from fragment A. To ensure
that the host activity implements this interface, fragment A's <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onAttach%28android.app.Activity%29">onAttach()</a></code> callback method (which the system calls when adding
the fragment to the activity) instantiates an instance of <code>OnArticleSelectedListener</code> by
casting the <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> that is passed into <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onAttach%28android.app.Activity%29">onAttach()</a></code>:</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FragmentA</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ListFragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">OnArticleSelectedListener</span><span class="pln"> mListener</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onAttach</span><span class="pun">(</span><span class="typ">Activity</span><span class="pln"> activity</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">onAttach</span><span class="pun">(</span><span class="pln">activity</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mListener </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">OnArticleSelectedListener</span><span class="pun">)</span><span class="pln"> activity</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pln"> </span><span class="pun">(</span><span class="typ">ClassCastException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ClassCastException</span><span class="pun">(</span><span class="pln">activity</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">()</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">" must implement OnArticleSelectedListener"</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>If the activity has not implemented the interface, then the fragment throws a
<code><a href="http://developer.android.com/reference/java/lang/ClassCastException.html">ClassCastException</a></code>.
On success, the <code>mListener</code> member holds a reference to activity's implementation of 
<code>OnArticleSelectedListener</code>, so that fragment A can share events with the activity by calling
methods defined by the <code>OnArticleSelectedListener</code> interface. For example, if fragment A is an
extension of <code><a href="http://developer.android.com/reference/android/app/ListFragment.html">ListFragment</a></code>, each time
the user clicks a list item, the system calls <code><a href="http://developer.android.com/reference/android/app/ListFragment.html#onListItemClick%28android.widget.ListView,%20android.view.View,%20int,%20long%29">onListItemClick()</a></code> in the fragment, which then calls <code>onArticleSelected()</code> to share
the event with the activity:</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">FragmentA</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ListFragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="typ">OnArticleSelectedListener</span><span class="pln"> mListener</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onListItemClick</span><span class="pun">(</span><span class="typ">ListView</span><span class="pln"> l</span><span class="pun">,</span><span class="pln"> </span><span class="typ">View</span><span class="pln"> v</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> position</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> id</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Append the clicked item's row ID with the content provider Uri</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Uri</span><span class="pln"> noteUri </span><span class="pun">=</span><span class="pln"> </span><span class="typ">ContentUris</span><span class="pun">.</span><code><a href="http://developer.android.com/reference/android/content/ContentUris.html#withAppendedId%28android.net.Uri,%20long%29"><span class="pln">withAppendedId</span></a></code><span class="pun">(</span><span class="typ">ArticleColumns</span><span class="pun">.</span><span class="pln">CONTENT_URI</span><span class="pun">,</span><span class="pln"> id</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Send the event and Uri to the host activity</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; mListener</span><span class="pun">.</span><span class="pln">onArticleSelected</span><span class="pun">(</span><span class="pln">noteUri</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">...</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>The <code>id</code> parameter passed to <code><a href="http://developer.android.com/reference/android/app/ListFragment.html#onListItemClick%28android.widget.ListView,%20android.view.View,%20int,%20long%29">onListItemClick()</a></code> is the row ID of the clicked item,
which the activity (or other fragment) uses to fetch the article from the application's <code><a href="http://developer.android.com/reference/android/content/ContentProvider.html">ContentProvider</a></code>.</p>

<p><!--To see a complete implementation of this kind of callback interface, see the <a
href="/resources/samples/NotePad/index.html">NotePad sample</a>. -->More information about
using a content provider is available in the <a href="http://developer.android.com/guide/topics/providers/content-providers.html">Content Providers</a> document.</p>



<h3 id="ActionBar">Adding items to the Action Bar</h3>

<p>Your fragments can contribute menu items to the activity's <a href="http://developer.android.com/guide/topics/ui/menus.html#options-menu">Options Menu</a> (and, consequently, the <a href="http://developer.android.com/guide/topics/ui/actionbar.html">Action Bar</a>) by implementing
<code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu%28android.view.Menu,%20android.view.MenuInflater%29">onCreateOptionsMenu()</a></code>. In order
for this method to receive calls, however, you must call <code><a href="http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu%28boolean%29">setHasOptionsMenu()</a></code> during <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreate%28android.os.Bundle%29">onCreate()</a></code>, to indicate that the fragment
would like to add items to the Options Menu (otherwise, the fragment will not receive a call to
<code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu%28android.view.Menu,%20android.view.MenuInflater%29">onCreateOptionsMenu()</a></code>).</p>

<p>Any items that you then add to the Options Menu from the fragment are appended to the existing
menu items. The fragment also receives callbacks to <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected%28android.view.MenuItem%29">onOptionsItemSelected()</a></code> when a menu item
is selected.</p>

<p>You can also register a view in your fragment layout to provide a context menu by calling <code><a href="http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu%28android.view.View%29">registerForContextMenu()</a></code>. When the user opens
the context menu, the fragment receives a call to <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu%28android.view.ContextMenu,%20android.view.View,%20android.view.ContextMenu.ContextMenuInfo%29">onCreateContextMenu()</a></code>. When the user selects an item, the fragment receives a call to <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected%28android.view.MenuItem%29">onContextItemSelected()</a></code>.</p>

<p class="note"><strong>Note:</strong> Although your fragment receives an on-item-selected callback
for each menu item it adds, the activity is first to receive the respective callback when the user
selects a menu item. If the activity's implementation of the on-item-selected callback does not
handle the selected item, then the event is passed to the fragment's callback. This is true for
the Options Menu and context menus.</p>

<p>For more information about menus, see the <a href="http://developer.android.com/guide/topics/ui/menus.html">Menus</a> and <a href="http://developer.android.com/guide/topics/ui/actionbar.html">Action Bar</a> developer guides.</p>




<h2 style="margin-bottom: 0px;" id="Lifecycle">Handling the Fragment Lifecycle</h2><hr>

<div class="figure" style="width:350px">
<img src="android.os.Build.VERSION_CODES_files/activity_fragment_lifecycle.png" alt="">
<p class="img-caption"><strong>Figure 3.</strong> The effect of the activity lifecycle on the fragment
lifecycle.</p>
</div>

<p>Managing the lifecycle of a fragment is a lot like managing the lifecycle of an activity. Like
an activity, a fragment can exist in three states:</p>

<dl>
  <dt><i>Resumed</i></dt>
    <dd>The fragment is visible in the running activity.</dd>

  <dt><i>Paused</i></dt>
    <dd>Another activity is in the foreground and has focus, but the activity in which this
fragment lives is still visible (the foreground activity is partially transparent or doesn't
cover the entire screen).</dd>

  <dt><i>Stopped</i></dt>
    <dd>The fragment is not visible. Either the host activity has been stopped or the
fragment has been removed from the activity but added to the back stack. A stopped fragment is
still alive (all state and member information is retained by the system). However, it is no longer
visible to the user and will be killed if the activity is killed.</dd>
</dl>

<p>Also like an activity, you can retain the state of a fragment using a <code><a href="http://developer.android.com/reference/android/os/Bundle.html">Bundle</a></code>, in case the activity's process is killed and you need to restore the
fragment state when the activity is recreated. You can save the state during the fragment's <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onSaveInstanceState%28android.os.Bundle%29">onSaveInstanceState()</a></code> callback and restore it during
either <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreate%28android.os.Bundle%29">onCreate()</a></code>, <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code>, or <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated%28android.os.Bundle%29">onActivityCreated()</a></code>. For more information about saving
state, see the <a href="http://developer.android.com/guide/components/activities.html#SavingActivityState">Activities</a>
document.</p>

<p>The most significant difference in lifecycle between an activity and a fragment is how one is
stored in its respective back stack. An activity is placed into a back stack of activities
that's managed by the system when it's stopped, by default (so that the user can navigate back
to it with the <em>Back</em> button, as discussed in <a href="http://developer.android.com/guide/components/tasks-and-back-stack.html">Tasks and Back Stack</a>).
However, a fragment is placed into a back stack managed by the host activity only when you
explicitly request that the instance be saved by calling <code><a href="http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack%28java.lang.String%29">addToBackStack()</a></code> during a transaction that
removes the fragment.</p>

<p>Otherwise, managing the fragment lifecycle is very similar to managing the activity
lifecycle. So, the same practices for <a href="http://developer.android.com/guide/components/activities.html#Lifecycle">managing the activity
lifecycle</a> also apply to fragments. What you also need to understand, though, is how the life
of the activity affects the life of the fragment.</p>

<p class="caution"><strong>Caution:</strong> If you need a <code><a href="http://developer.android.com/reference/android/content/Context.html">Context</a></code> object
within your <code><a href="http://developer.android.com/reference/android/app/Fragment.html">Fragment</a></code>, you can call <code><a href="http://developer.android.com/reference/android/app/Fragment.html#getActivity%28%29">getActivity()</a></code>.
However, be careful to call <code><a href="http://developer.android.com/reference/android/app/Fragment.html#getActivity%28%29">getActivity()</a></code> only when the fragment is
attached to an activity. When the fragment is not yet attached, or was detached during the end of
its lifecycle, <code><a href="http://developer.android.com/reference/android/app/Fragment.html#getActivity%28%29">getActivity()</a></code> will return null.</p>


<h3 id="CoordinatingWithActivity">Coordinating with the activity lifecycle</h3>

<p>The lifecycle of the activity in which the fragment lives directly affects the lifecycle of the
fragment, such that each lifecycle callback for the activity results in a similar callback for each
fragment. For example, when the activity receives <code><a href="http://developer.android.com/reference/android/app/Activity.html#onPause%28%29">onPause()</a></code>, each
fragment in the activity receives <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onPause%28%29">onPause()</a></code>.</p>

<p>Fragments have a few extra lifecycle callbacks, however, that handle unique interaction with the
activity in order to perform actions such as build and destroy the fragment's UI. These additional
callback methods are:</p>

<dl>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onAttach%28android.app.Activity%29">onAttach()</a></code></dt>
    <dd>Called when the fragment has been associated with the activity (the <code><a href="http://developer.android.com/reference/android/app/Activity.html">Activity</a></code> is passed in here).</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onCreateView%28android.view.LayoutInflater,%20android.view.ViewGroup,%20android.os.Bundle%29">onCreateView()</a></code></dt>
    <dd>Called to create the view hierarchy associated with the fragment.</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated%28android.os.Bundle%29">onActivityCreated()</a></code></dt>
    <dd>Called when the activity's <code><a href="http://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29">onCreate()</a></code> method has returned.</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onDestroyView%28%29">onDestroyView()</a></code></dt>
    <dd>Called when the view hierarchy associated with the fragment is being removed.</dd>
  <dt><code><a href="http://developer.android.com/reference/android/app/Fragment.html#onDetach%28%29">onDetach()</a></code></dt>
    <dd>Called when the fragment is being disassociated from the activity.</dd>
</dl>

<p>The flow of a fragment's lifecycle, as it is affected by its host activity, is illustrated
by figure 3. In this figure, you can see how each successive state of the activity determines which
callback methods a fragment may receive. For example, when the activity has received its <code><a href="http://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29">onCreate()</a></code> callback, a fragment in the activity receives no more than
the <code><a href="http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated%28android.os.Bundle%29">onActivityCreated()</a></code> callback.</p>

<p>Once the activity reaches the resumed state, you can freely add and remove fragments to the
activity. Thus, only while the activity is in the resumed state can the lifecycle of a fragment
change independently.</p>

<p>However, when the activity leaves the resumed state, the fragment again is pushed through its
lifecycle by the activity.</p>




<h2 style="margin-bottom: 0px;" id="Example">Example</h2><hr>

<p>To bring everything discussed in this document together, here's an example of an activity
using two fragments to create a two-pane layout. The activity below includes one fragment to
show a list of Shakespeare play titles and another to show a summary of the play when selected
from the list. It also demonstrates how to provide different configurations of the fragments,
based on the screen configuration.</p>

<p class="note"><strong>Note:</strong> The complete source code for this activity is available in
<a href="http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/app/FragmentLayout.html"><code>FragmentLayout.java</code></a>.</p>

<p>The main activity applies a layout in the usual way, during <code><a href="http://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29">onCreate()</a></code>:</p>

<pre class="prettyprint"><span class="lit">@Override</span><span class="pln"><br></span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onCreate</span><span class="pun">(</span><span class="typ">Bundle</span><span class="pln"> savedInstanceState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">onCreate</span><span class="pun">(</span><span class="pln">savedInstanceState</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; setContentView</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">layout</span><span class="pun">.</span><span class="pln">fragment_layout</span><span class="pun">);</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>The layout applied is <code>fragment_layout.xml</code>:</p>

<pre class="prettyprint"><span class="tag">&lt;LinearLayout</span><span class="pln"> </span><span class="atn">xmlns:android</span><span class="pun">=</span><span class="atv">"http://schemas.android.com/apk/res/android"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:orientation</span><span class="pun">=</span><span class="atv">"horizontal"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="tag">&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;fragment</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"com.example.android.apis.app.FragmentLayout$TitlesFragment"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:id</span><span class="pun">=</span><span class="atv">"@+id/titles"</span><span class="pln"> </span><span class="atn">android:layout_weight</span><span class="pun">=</span><span class="atv">"1"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"0px"</span><span class="pln"> </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="tag">&lt;FrameLayout</span><span class="pln"> </span><span class="atn">android:id</span><span class="pun">=</span><span class="atv">"@+id/details"</span><span class="pln"> </span><span class="atn">android:layout_weight</span><span class="pun">=</span><span class="atv">"1"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"0px"</span><span class="pln"> </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:background</span><span class="pun">=</span><span class="atv">"?android:attr/detailsElementBackground"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br><br></span><span class="tag">&lt;/LinearLayout&gt;</span></pre>

<p>Using this layout, the system instantiates the <code>TitlesFragment</code> (which lists the play
titles) as soon as the activity loads the layout, while the <code><a href="http://developer.android.com/reference/android/widget/FrameLayout.html">FrameLayout</a></code>
(where the fragment for showing the play summary will go) consumes space on the right side of the
screen, but remains empty at first. As you'll see below, it's not until the user selects an item
from the list that a fragment is placed into the <code><a href="http://developer.android.com/reference/android/widget/FrameLayout.html">FrameLayout</a></code>.</p>

<p>However, not all screen configurations are wide enough to show both the list of
plays and the summary, side by side. So, the layout above is used only for the landscape
screen configuration, by saving it at <code>res/layout-land/fragment_layout.xml</code>.</p>

<p>Thus, when the screen is in portrait orientation, the system applies the following layout, which
is saved at <code>res/layout/fragment_layout.xml</code>:</p>

<pre class="prettyprint"><span class="tag">&lt;FrameLayout</span><span class="pln"> </span><span class="atn">xmlns:android</span><span class="pun">=</span><span class="atv">"http://schemas.android.com/apk/res/android"</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="tag">&gt;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="tag">&lt;fragment</span><span class="pln"> </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"com.example.android.apis.app.FragmentLayout$TitlesFragment"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:id</span><span class="pun">=</span><span class="atv">"@+id/titles"</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="atn">android:layout_width</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="atn">android:layout_height</span><span class="pun">=</span><span class="atv">"match_parent"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln"><br></span><span class="tag">&lt;/FrameLayout&gt;</span></pre>

<p>This layout includes only <code>TitlesFragment</code>. This means that, when the device is in
portrait orientation, only the list of play titles is visible. So, when the user clicks a list
item in this configuration, the application will start a new activity to show the summary,
instead of loading a second fragment.</p>

<p>Next, you can see how this is accomplished in the fragment classes. First is <code>TitlesFragment</code>, which shows the list of Shakespeare play titles. This fragment extends <code><a href="http://developer.android.com/reference/android/app/ListFragment.html">ListFragment</a></code> and relies on it to handle most of the list view work.</p>

<p>As you inspect this code, notice that there are two possible behaviors when the user clicks a
list item: depending on which of the two layouts is active, it can either create and display a new
fragment to show the details in the same activity (adding the fragment to the <code><a href="http://developer.android.com/reference/android/widget/FrameLayout.html">FrameLayout</a></code>), or start a new activity (where the fragment can be shown).</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">TitlesFragment</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">ListFragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">boolean</span><span class="pln"> mDualPane</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">int</span><span class="pln"> mCurCheckPosition </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onActivityCreated</span><span class="pun">(</span><span class="typ">Bundle</span><span class="pln"> savedInstanceState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">onActivityCreated</span><span class="pun">(</span><span class="pln">savedInstanceState</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Populate list with our static array of titles.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; setListAdapter</span><span class="pun">(</span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ArrayAdapter</span><span class="pun">&lt;</span><span class="typ">String</span><span class="pun">&gt;(</span><span class="pln">getActivity</span><span class="pun">(),</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; android</span><span class="pun">.</span><span class="pln">R</span><span class="pun">.</span><span class="pln">layout</span><span class="pun">.</span><span class="pln">simple_list_item_activated_1</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Shakespeare</span><span class="pun">.</span><span class="pln">TITLES</span><span class="pun">));</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Check to see if we have a frame in which to embed the details</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// fragment directly in the containing UI.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">View</span><span class="pln"> detailsFrame </span><span class="pun">=</span><span class="pln"> getActivity</span><span class="pun">().</span><span class="pln">findViewById</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">details</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; mDualPane </span><span class="pun">=</span><span class="pln"> detailsFrame </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> detailsFrame</span><span class="pun">.</span><span class="pln">getVisibility</span><span class="pun">()</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="typ">View</span><span class="pun">.</span><span class="pln">VISIBLE</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">savedInstanceState </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Restore last state for checked position.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mCurCheckPosition </span><span class="pun">=</span><span class="pln"> savedInstanceState</span><span class="pun">.</span><span class="pln">getInt</span><span class="pun">(</span><span class="str">"curChoice"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mDualPane</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// In dual-pane mode, the list view highlights the selected item.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getListView</span><span class="pun">().</span><span class="pln">setChoiceMode</span><span class="pun">(</span><span class="typ">ListView</span><span class="pun">.</span><span class="pln">CHOICE_MODE_SINGLE</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Make sure our UI is in the correct state.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; showDetails</span><span class="pun">(</span><span class="pln">mCurCheckPosition</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onSaveInstanceState</span><span class="pun">(</span><span class="typ">Bundle</span><span class="pln"> outState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">onSaveInstanceState</span><span class="pun">(</span><span class="pln">outState</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; outState</span><span class="pun">.</span><span class="pln">putInt</span><span class="pun">(</span><span class="str">"curChoice"</span><span class="pun">,</span><span class="pln"> mCurCheckPosition</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onListItemClick</span><span class="pun">(</span><span class="typ">ListView</span><span class="pln"> l</span><span class="pun">,</span><span class="pln"> </span><span class="typ">View</span><span class="pln"> v</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> position</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">long</span><span class="pln"> id</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; showDetails</span><span class="pun">(</span><span class="pln">position</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="com">/**<br>&nbsp; &nbsp; &nbsp;* Helper function to show the details of a selected item, either by<br>&nbsp; &nbsp; &nbsp;* displaying a fragment in-place in the current UI, or starting a<br>&nbsp; &nbsp; &nbsp;* whole new activity in which it is displayed.<br>&nbsp; &nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">void</span><span class="pln"> showDetails</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; mCurCheckPosition </span><span class="pun">=</span><span class="pln"> index</span><span class="pun">;</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">mDualPane</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// We can display everything in-place with fragments, so update</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// the list to highlight the selected item and show the data.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getListView</span><span class="pun">().</span><span class="pln">setItemChecked</span><span class="pun">(</span><span class="pln">index</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Check what fragment is currently shown, replace if needed.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">DetailsFragment</span><span class="pln"> details </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="typ">DetailsFragment</span><span class="pun">)</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getFragmentManager</span><span class="pun">().</span><span class="pln">findFragmentById</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">details</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">details </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> details</span><span class="pun">.</span><span class="pln">getShownIndex</span><span class="pun">()</span><span class="pln"> </span><span class="pun">!=</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Make new fragment to show this selection.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; details </span><span class="pun">=</span><span class="pln"> </span><span class="typ">DetailsFragment</span><span class="pun">.</span><span class="pln">newInstance</span><span class="pun">(</span><span class="pln">index</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Execute a transaction, replacing any existing fragment</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// with this one inside the frame.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">FragmentTransaction</span><span class="pln"> ft </span><span class="pun">=</span><span class="pln"> getFragmentManager</span><span class="pun">().</span><span class="pln">beginTransaction</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">index </span><span class="pun">==</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ft</span><span class="pun">.</span><span class="pln">replace</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">details</span><span class="pun">,</span><span class="pln"> details</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ft</span><span class="pun">.</span><span class="pln">replace</span><span class="pun">(</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">a_item</span><span class="pun">,</span><span class="pln"> details</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ft</span><span class="pun">.</span><span class="pln">setTransition</span><span class="pun">(</span><span class="typ">FragmentTransaction</span><span class="pun">.</span><span class="pln">TRANSIT_FRAGMENT_FADE</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ft</span><span class="pun">.</span><span class="pln">commit</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Otherwise we need to launch a new activity to display</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// the dialog fragment with selected text.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Intent</span><span class="pln"> intent </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Intent</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; intent</span><span class="pun">.</span><span class="pln">setClass</span><span class="pun">(</span><span class="pln">getActivity</span><span class="pun">(),</span><span class="pln"> </span><span class="typ">DetailsActivity</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; intent</span><span class="pun">.</span><span class="pln">putExtra</span><span class="pun">(</span><span class="str">"index"</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; startActivity</span><span class="pun">(</span><span class="pln">intent</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>The second fragment, <code>DetailsFragment</code> shows the play summary for the item selected from
the list from <code>TitlesFragment</code>:</p>
 
<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">DetailsFragment</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Fragment</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="com">/**<br>&nbsp; &nbsp; &nbsp;* Create a new instance of DetailsFragment, initialized to<br>&nbsp; &nbsp; &nbsp;* show the text at 'index'.<br>&nbsp; &nbsp; &nbsp;*/</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">DetailsFragment</span><span class="pln"> newInstance</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">DetailsFragment</span><span class="pln"> f </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DetailsFragment</span><span class="pun">();</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// Supply index input as an argument.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Bundle</span><span class="pln"> args </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Bundle</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; args</span><span class="pun">.</span><span class="pln">putInt</span><span class="pun">(</span><span class="str">"index"</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; f</span><span class="pun">.</span><span class="pln">setArguments</span><span class="pun">(</span><span class="pln">args</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> f</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> getShownIndex</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> getArguments</span><span class="pun">().</span><span class="pln">getInt</span><span class="pun">(</span><span class="str">"index"</span><span class="pun">,</span><span class="pln"> </span><span class="lit">0</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">View</span><span class="pln"> onCreateView</span><span class="pun">(</span><span class="typ">LayoutInflater</span><span class="pln"> inflater</span><span class="pun">,</span><span class="pln"> </span><span class="typ">ViewGroup</span><span class="pln"> container</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">Bundle</span><span class="pln"> savedInstanceState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">container </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// We have different layouts, and in one of them this</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// fragment's containing frame doesn't exist. &nbsp;The fragment</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// may still be created from its saved state, but there is</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// no reason to try to create its view hierarchy because it</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// won't be displayed. &nbsp;Note this is not needed -- we could</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// just run the code below, where we would create and return</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// the view hierarchy; it would just never be used.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">ScrollView</span><span class="pln"> scroller </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ScrollView</span><span class="pun">(</span><span class="pln">getActivity</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">TextView</span><span class="pln"> text </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">TextView</span><span class="pun">(</span><span class="pln">getActivity</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">int</span><span class="pln"> padding </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">int</span><span class="pun">)</span><span class="typ">TypedValue</span><span class="pun">.</span><span class="pln">applyDimension</span><span class="pun">(</span><span class="typ">TypedValue</span><span class="pun">.</span><span class="pln">COMPLEX_UNIT_DIP</span><span class="pun">,</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="lit">4</span><span class="pun">,</span><span class="pln"> getActivity</span><span class="pun">().</span><span class="pln">getResources</span><span class="pun">().</span><span class="pln">getDisplayMetrics</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; text</span><span class="pun">.</span><span class="pln">setPadding</span><span class="pun">(</span><span class="pln">padding</span><span class="pun">,</span><span class="pln"> padding</span><span class="pun">,</span><span class="pln"> padding</span><span class="pun">,</span><span class="pln"> padding</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; scroller</span><span class="pun">.</span><span class="pln">addView</span><span class="pun">(</span><span class="pln">text</span><span class="pun">);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; text</span><span class="pun">.</span><span class="pln">setText</span><span class="pun">(</span><span class="typ">Shakespeare</span><span class="pun">.</span><span class="pln">DIALOGUE</span><span class="pun">[</span><span class="pln">getShownIndex</span><span class="pun">()]);</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pln"> scroller</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre>

<p>Recall from the <code>TitlesFragment</code> class, that, if the user clicks a list item and the
current layout does <em>not</em> include the <code>R.id.details</code> view (which is where the
<code>DetailsFragment</code> belongs), then the application starts the <code>DetailsActivity</code>
activity to display the content of the item.</p>

<p>Here is the <code>DetailsActivity</code>, which simply embeds the <code>DetailsFragment</code> to display
the selected play summary when the screen is in portrait orientation:</p>

<pre class="prettyprint"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">DetailsActivity</span><span class="pln"> </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Activity</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br><br>&nbsp; &nbsp; </span><span class="lit">@Override</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="kwd">protected</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> onCreate</span><span class="pun">(</span><span class="typ">Bundle</span><span class="pln"> savedInstanceState</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">super</span><span class="pun">.</span><span class="pln">onCreate</span><span class="pun">(</span><span class="pln">savedInstanceState</span><span class="pun">);</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">getResources</span><span class="pun">().</span><span class="pln">getConfiguration</span><span class="pun">().</span><span class="pln">orientation<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">==</span><span class="pln"> </span><span class="typ">Configuration</span><span class="pun">.</span><span class="pln">ORIENTATION_LANDSCAPE</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// If the screen is now in landscape mode, we can show the</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// dialog in-line with the list so we don't need this activity.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; finish</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">return</span><span class="pun">;</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">savedInstanceState </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="com">// During initial setup, plug in the details fragment.</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="typ">DetailsFragment</span><span class="pln"> details </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">DetailsFragment</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; details</span><span class="pun">.</span><span class="pln">setArguments</span><span class="pun">(</span><span class="pln">getIntent</span><span class="pun">().</span><span class="pln">getExtras</span><span class="pun">());</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getFragmentManager</span><span class="pun">().</span><span class="pln">beginTransaction</span><span class="pun">().</span><span class="pln">add</span><span class="pun">(</span><span class="pln">android</span><span class="pun">.</span><span class="pln">R</span><span class="pun">.</span><span class="pln">id</span><span class="pun">.</span><span class="pln">content</span><span class="pun">,</span><span class="pln"> details</span><span class="pun">).</span><span class="pln">commit</span><span class="pun">();</span><span class="pln"><br>&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br>&nbsp; &nbsp; </span><span class="pun">}</span><span class="pln"><br></span><span class="pun">}</span></pre>
 
<p>Notice that this activity finishes itself if the configuration is landscape, so that the main
activity can take over and display the <code>DetailsFragment</code> alongside the <code>TitlesFragment</code>.
This can happen if the user begins the <code>DetailsActivity</code> while in portrait orientation, but
then rotates to landscape (which restarts the current activity).</p>


<p>For more samples using fragments (and complete source files for this example),
see the API Demos sample app available in <a href="http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/app/index.html#Fragment">
ApiDemos</a> (available for download from the <a href="http://developer.android.com/resources/samples/get.html">Samples SDK component</a>).</p>



    </div>
      
      <div class="content-footer layout-content-row" itemscope="" itemtype="http://schema.org/SiteNavigationElement">
        <div class="layout-content-col col-8" style="padding-top:4px">
          
            <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;"><iframe title="+1" data-gapiattached="true" src="android.os.Build.VERSION_CODES_files/fastbutton.htm" name="I0_1382632149068" id="I0_1382632149068" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>
          
        </div>
        
        <div class="paging-links layout-content-col col-4">
          
        </div>
        
      </div>
      
      
      

  </div> <!-- end jd-content -->

<div id="footer" class="wrap">
        

  <div id="copyright">
    
  Except as noted, this content is 
  licensed under <a href="http://creativecommons.org/licenses/by/2.5/">
  Creative Commons Attribution 2.5</a>. For details and 
  restrictions, see the <a href="http://developer.android.com/license.html">Content 
  License</a>.
  </div>


  <div id="footerlinks">
    
  <p>
    <a href="http://developer.android.com/about/index.html">About Android</a>&nbsp;&nbsp;|&nbsp;
    <a href="http://developer.android.com/legal.html">Legal</a>&nbsp;&nbsp;|&nbsp;
    <a href="http://developer.android.com/support.html">Support</a>
  </p>
  </div>

</div> <!-- end footer -->
</div><!-- end doc-content -->

</div> <!-- end body-content --> 











<iframe style="width: 1px; height: 1px; position: absolute; top: -100px;" src="android.os.Build.VERSION_CODES_files/postmessageRelay.htm" id="oauth2relay2094271454" name="oauth2relay2094271454"></iframe> <div style="display:none"> <span id="private_ratings"> <span class="gsc-snippet-metadata"> <span data-if="Vars.ratingstars"> <span class="gsc-rating-bar"> <span data-attr="{style:'width:' + (Vars.ratingstars * 20) + '%'}"></span> </span> <span data-if="Vars.ratingcount"> <span data-body="' ' + Vars.ratingcount"></span> <span> reviews</span> </span> </span> <span data-if="Vars.totaltime"> <span data-if="Vars.ratingstars &amp;&amp; Vars.ratingcount"> - </span> <span data-body="Vars.totaltime"></span> </span> <span data-if="Vars.calories"> <span data-if="Vars.ratingstars &amp;&amp; Vars.ratingcount || Vars.totaltime"> - </span> <span data-body="Vars.calories"></span> <span> cal</span> </span> <span data-if="Vars.pricerange"> <span data-if="Vars.ratingstars &amp;&amp; Vars.ratingcount || Vars.totaltime || Vars.calories"> - </span> <span> Price range: </span> <span data-body="Vars.pricerange"></span> </span> <span data-if="Vars.reviewer" class="gsc-reviewer"> <span data-body="' ' + Vars.reviewer"></span> </span> </span> </span> <span id="private_hproduct"> <span class="gsc-snippet-metadata"> <span data-if="Vars.availability">Availability: <span data-body="Vars.availability"></span>.</span> <span data-if="Vars.availability &amp;&amp; Vars.price">&nbsp;</span> <span data-if="Vars.price"> Price: <span data-body="Vars.price"></span>.</span> </span> </span> <span id="private_hreview_icon"> <span data-if="google.search.richsnippets.hreviewNonEmpty(Vars.hreview)"> <span class="gsc-zippy"></span> </span> </span> <span id="private_hreview_content"> <span data-if="google.search.richsnippets.hreviewNonEmpty(Vars.hreview)" class="gsc-preview-reviews"> <ul> <span data-foreach="Vars.hreview" data-attr="0"> <li data-if="(Cur.description || Cur.summary) &amp;&amp; Index == 0" class="gsc-review-agregate-first-line"> <span data-if="Cur.description" data-body="Cur.description"></span> <span data-elif="Cur.summary" data-body="Cur.summary"></span> </li> <li data-elif="(Cur.description || Cur.summary) &amp;&amp; Index &lt; 10" data-attr="{'class': Index % 2 == 0 ? 'gsc-review-agregate-even-lines' : 'gsc-review-agregate-odd-lines'}"> <span data-if="Cur.description" data-body="Cur.description"></span> <span data-elif="Cur.summary" data-body="Cur.summary"></span> </li> </span> </ul> </span> </span> <span id="private_hrecipe"> <span data-if="Vars.author" class="gsc-author"> <span data-body="' ' + Vars.author"></span> </span> </span> <span id="private_recipe"> <span data-attr="0" data-body="render('private_ratings',google.search.richsnippets.merge(richSnippet.recipe))"> </span> <span data-if="Vars.richSnippet.hrecipe &amp;&amp; Vars.richSnippet.hrecipe.author &amp;&amp; !Vars.richSnippet.recipe.reviewer" data-attr="0" data-body="render('private_hrecipe',richSnippet.hrecipe)"> </span> </span> <span id="private_person"> <span data-vars="{vcard:google.search.richsnippets.merge(Vars.richSnippet.vcard)}"> <span data-if="Vars.richSnippet.vcard &amp;&amp; vcard.adr"> <span data-if="vcard.adr" class="gs-location"> <span data-body="' ' + vcard.adr"> </span> </span> </span> <span data-elif="Vars.richSnippet.person"> <span data-if="person.role" class="gsc-role"> <span data-attr="0" data-body="' ' + person.role"> </span> </span> <span data-if="person.org" class="gsc-org"> <span data-body="' @' + person.org"> </span> </span> <span data-if="person.location" class="gsc-location"> <span data-if="person.org || person.role || Vars.richSnippet.review"> - </span> <span data-body="' ' + person.location"> </span> </span> </span> <span data-if="Vars.richSnippet.vcard &amp;&amp; vcard.tel" class="gsc-tel"> <span data-if="(person &amp;&amp; (person.org || person.role || Vars.richSnippet.review || person.location)) || (Vars.richSnippet.vcard &amp;&amp; vcard.adr) "> - </span> <span data-body="' Tel: ' + vcard.tel"> </span> </span> </span> </span> <span id="private_metadata" class="gsc-snippet-metadata"> <span data-vars="{person:google.search.richsnippets.merge(Vars.richSnippet.person), product:google.search.richsnippets.merge(Vars.richSnippet.hproduct)}"> <span data-if="Vars.richSnippet.recipe" data-attr="0" data-body="render('private_recipe', Vars)"> </span> <span data-elif="Vars.richSnippet.review" data-attr="0" data-body="render('private_ratings',google.search.richsnippets.merge(richSnippet.review))"> </span> <span data-if="Vars.richSnippet.hproduct &amp;&amp; (product.availability || product.price)" data-attr="0" data-body="render('private_hproduct', product)"> </span> <span data-elif="Vars.richSnippet.person || Vars.richSnippet.vcard" data-attr="0" data-body="render('private_person', Vars)"> </span> </span> </span> <div id="base_webResult"> <div class="gs-webResult gs-result" data-vars="{longUrl:function() { var i = unescapedUrl.indexOf(visibleUrl); return i &lt; 1 ? visibleUrl : unescapedUrl.substring(i);}}"> <div class="gsc-thumbnail-inside"> <div class="gs-title"> <a class="gs-title" data-attr="{href:unescapedUrl,target:target,dir:bidiHtmlDir(title)}" data-body="html(title)"> </a> </div> </div> <div class="gsc-url-top"> <div class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short" data-body="visibleUrl" data-attr="{dir:bidiTextDir(visibleUrl)}"> </div> <div class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long" data-body="Vars.formattedUrl ? html(Vars.formattedUrl) : longUrl()" data-attr="{dir: Vars.formattedUrl ? bidiHtmlDir(Vars.formattedUrl) : bidiTextDir(longUrl()), style:'word-break:break-all;'}"> </div> </div> <table class="gsc-table-result"> <tbody> <tr> <td class="gsc-table-cell-thumbnail gsc-thumbnail" style="display:none"> <div data-if="Vars.richSnippet" data-attr="0" data-body="render('thumbnail',richSnippet,{url:unescapedUrl,target:target})"> </div> </td> <td data-attr="{'class': 'gsc-table-cell-snippet-close' + ((google.search.CurrentLocale == 'en' &amp;&amp; Vars.richSnippet &amp;&amp; Vars.richSnippet.hreview &amp;&amp; google.search.richsnippets.hreviewNonEmpty(Vars.richSnippet.hreview)) ? ' gsc-collapsable' : '')}" onclick="if (this.className == 'gsc-table-cell-snippet-close gsc-collapsable') { this.className = 'gsc-table-cell-snippet-open gsc-collapsable'; } else if (this.className == 'gsc-table-cell-snippet-open gsc-collapsable') { this.className = 'gsc-table-cell-snippet-close gsc-collapsable'; };"> <span data-if="google.search.CurrentLocale == 'en' &amp;&amp; Vars.richSnippet &amp;&amp; Vars.richSnippet.hreview" data-attr="0" data-body="render('private_hreview_icon',richSnippet)"> </span> <div class="gs-title gsc-table-cell-thumbnail gsc-thumbnail-left"> <a class="gs-title" data-attr="{href:unescapedUrl,target:target,dir:bidiHtmlDir(title)}" data-body="html(title)"> </a> </div> <div class="gs-fileFormat" data-if="Vars.fileFormat"> <span class="gs-fileFormat" data-body="localizedMessages['file-format'] + ' '"></span> <span class="gs-fileFormatType" data-body="Vars.fileFormat"></span> </div> <div data-if="google.search.CurrentLocale == 'en' &amp;&amp; Vars.richSnippet"> <span data-attr="0" data-body="render('private_metadata', Vars)"> </span> </div> <div class="gs-bidi-start-align gs-snippet" data-body="html(content)" data-attr="{dir:bidiHtmlDir(content)}"> </div> <div class="gsc-url-bottom"> <div class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-short" data-body="visibleUrl" data-attr="{dir:bidiTextDir(visibleUrl)}"> </div> <div class="gs-bidi-start-align gs-visibleUrl gs-visibleUrl-long" data-body="Vars.formattedUrl ? html(Vars.formattedUrl) : longUrl()" data-attr="{dir: Vars.formattedUrl ? bidiHtmlDir(Vars.formattedUrl) : bidiTextDir(longUrl()), style:'word-break:break-all;'}"> </div> </div> <div data-if="Vars.richSnippet &amp;&amp; Vars.richSnippet.action" class="gs-actions" data-body="render('action',richSnippet,{url:unescapedUrl,target:target})"> </div> <span data-if="google.search.CurrentLocale == 'en' &amp;&amp; Vars.richSnippet &amp;&amp; Vars.richSnippet.hreview" data-attr="0" data-body="render('private_hreview_content',richSnippet)"> </span> <div class="gs-per-result-labels" data-if="Vars.perResultLabels"> <span data-body="localizedMessages['labeled']"></span> <div data-foreach="Vars.perResultLabels" data-attr="0"> <a class="gs-label" data-attr="{'data-refinementLabel': Cur['label'], 'label-with-op': Cur['label_with_op'], 'dir' : bidiTextDir(Cur.anchor)}" data-body="Cur.anchor"></a> <span data-body="bidiTextMarkAfter(Cur.anchor)"></span> </div> </div> </td> </tr> </tbody> </table> </div> </div> <div id="base_imageResult_image"><a data-attr="{ 'href':originalContextUrl, 'target':target, 'class':imageClass }"><img data-attr="{ 'src':tbUrl, 'title':titleNoFormatting, 'class':imageClass }"></a></div> <div id="base_imageResult_text"><div class="gs-title gs-ellipsis"><a class="gs-title" data-attr="{ href:originalContextUrl, target:target, dir:bidiHtmlDir(title) }" data-body="html(title)"></a></div><div class="gs-visibleUrl gs-bidi-start-align gs-ellipsis gsc-url-top" data-attr="{title:visibleUrl, dir:bidiTextDir(visibleUrl)}" data-body="visibleUrl"></div><div class="gs-snippet gs-bidi-start-align gs-ellipsis" data-attr="{title:contentNoFormatting, dir:bidiHtmlDir(content)}" data-body="html(content)"></div><div class="gs-size gs-ellipsis" data-body="width + ' × ' + height"></div><div class="gs-visibleUrl gs-bidi-start-align gs-ellipsis gsc-url-bottom" data-attr="{title:visibleUrl, dir:bidiTextDir(visibleUrl)}" data-body="visibleUrl"></div></div> <div id="base_imageResult_content"><div data-body="render('base_imageResult_image', Vars)" class="gs-image-box"></div><div data-body="render('base_imageResult_text', Vars)" class="gs-text-box"></div></div> <div id="base_imageResult_classic"><div class="gs-result gs-imageResult gs-imageResult-classic" data-body="render('base_imageResult_content', Vars, { imageClass: 'gs-image gs-image-scalable' })"></div></div> <div id="base_imageResult_column"><div class="gs-result gs-imageResult gs-imageResult-column" data-body="render('base_imageResult_content', Vars, { imageClass: 'gs-image gs-image-scalable' })"></div></div> <div id="base_imageResult_popup"><div class="gs-result gs-imageResult gs-imageResult-popup" onmouseover="google.search.ImageSearch.showPopup(this)" onmouseout="google.search.ImageSearch.hidePopup(this)"><div class="gs-image-thumbnail-box"><div data-body="render('base_imageResult_image', Vars, { imageClass: 'gs-image gs-image-scalable' })" class="gs-image-box"></div></div><div data-body="render('base_imageResult_content', Vars, { imageClass: 'gs-image' })" class="gs-image-popup-box"></div></div></div> <div id="base_thumbnail"> <div data-attr="0" data-vars="{tn:(Vars.cseThumbnail &amp;&amp; cseThumbnail.src) ? cseThumbnail : ( (Vars.thumbnail &amp;&amp; thumbnail.src) ? thumbnail : {src:Vars.document &amp;&amp; document.thumbnailUrl})}"> <div data-if="tn.src"> <a class="gs-image" data-attr="{href:url,target:target}"> <img data-if="!tn.width || !tn.height || tn.width &gt;= tn.height * 7 / 5" class="gs-image" data-attr="{src:tn.src}" onload="if (this.parentNode &amp;&amp; this.parentNode.parentNode &amp;&amp; this.parentNode.parentNode.parentNode) { this.parentNode.parentNode.parentNode.style.display = ''; this.parentNode.parentNode.className = 'gs-image-box gs-web-image-box gs-web-image-box-landscape'; } "> <img data-elif="true" class="gs-image" data-attr="{src:tn.src}" onload="if (this.parentNode &amp;&amp; this.parentNode.parentNode &amp;&amp; this.parentNode.parentNode.parentNode) { this.parentNode.parentNode.parentNode.style.display = ''; this.parentNode.parentNode.className = 'gs-image-box gs-web-image-box gs-web-image-box-portrait'; } "> </a> </div> </div> </div> <div id="base_action"> <div data-foreach="Vars.action" data-attr="0"> <div data-attr="{'class': 'gs-action ' + Cur['class']}" data-if="Cur.url &amp;&amp; Cur.label"> <a class="gs-action" data-attr="{href:Cur.url,target:target,dir:bidiTextDir(Cur.label)}" data-body="Cur.label"></a> </div> </div> </div> </div> </body></html>